{
"node_modules/browser-pack/_prelude.js":{"path":"node_modules/browser-pack/_prelude.js","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":117},"b":{"1":[32,21]},"f":{"1":40},"code":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","l":{"1":117}},
"node_modules/d3-array/build/d3-array.js":{"path":"node_modules/d3-array/build/d3-array.js","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":465,"column":0}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":0}},"3":{"start":{"line":8,"column":0},"end":{"line":10,"column":0}},"4":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}},"5":{"start":{"line":12,"column":0},"end":{"line":36,"column":0}},"6":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}},"7":{"start":{"line":14,"column":0},"end":{"line":35,"column":0}},"8":{"start":{"line":16,"column":0},"end":{"line":null,"column":-1}},"9":{"start":{"line":17,"column":0},"end":{"line":null,"column":-1}},"10":{"start":{"line":18,"column":0},"end":{"line":22,"column":0}},"11":{"start":{"line":19,"column":0},"end":{"line":null,"column":-1}},"12":{"start":{"line":20,"column":0},"end":{"line":21,"column":0}},"13":{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}},"14":{"start":{"line":21,"column":0},"end":{"line":null,"column":-1}},"15":{"start":{"line":23,"column":0},"end":{"line":null,"column":-1}},"16":{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}},"17":{"start":{"line":27,"column":0},"end":{"line":null,"column":-1}},"18":{"start":{"line":28,"column":0},"end":{"line":32,"column":0}},"19":{"start":{"line":29,"column":0},"end":{"line":null,"column":-1}},"20":{"start":{"line":30,"column":0},"end":{"line":31,"column":0}},"21":{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}},"22":{"start":{"line":31,"column":0},"end":{"line":null,"column":-1}},"23":{"start":{"line":33,"column":0},"end":{"line":null,"column":-1}},"24":{"start":{"line":38,"column":0},"end":{"line":42,"column":0}},"25":{"start":{"line":39,"column":0},"end":{"line":41,"column":0}},"26":{"start":{"line":40,"column":0},"end":{"line":null,"column":-1}},"27":{"start":{"line":44,"column":0},"end":{"line":null,"column":-1}},"28":{"start":{"line":45,"column":0},"end":{"line":null,"column":-1}},"29":{"start":{"line":46,"column":0},"end":{"line":null,"column":-1}},"30":{"start":{"line":48,"column":0},"end":{"line":50,"column":0}},"31":{"start":{"line":49,"column":0},"end":{"line":null,"column":-1}},"32":{"start":{"line":52,"column":0},"end":{"line":54,"column":0}},"33":{"start":{"line":53,"column":0},"end":{"line":null,"column":-1}},"34":{"start":{"line":56,"column":0},"end":{"line":86,"column":0}},"35":{"start":{"line":57,"column":0},"end":{"line":63,"column":0}},"36":{"start":{"line":65,"column":0},"end":{"line":83,"column":0}},"37":{"start":{"line":66,"column":0},"end":{"line":72,"column":0}},"38":{"start":{"line":67,"column":0},"end":{"line":71,"column":0}},"39":{"start":{"line":68,"column":0},"end":{"line":null,"column":-1}},"40":{"start":{"line":69,"column":0},"end":{"line":null,"column":-1}},"41":{"start":{"line":70,"column":0},"end":{"line":null,"column":-1}},"42":{"start":{"line":76,"column":0},"end":{"line":82,"column":0}},"43":{"start":{"line":77,"column":0},"end":{"line":81,"column":0}},"44":{"start":{"line":78,"column":0},"end":{"line":null,"column":-1}},"45":{"start":{"line":79,"column":0},"end":{"line":null,"column":-1}},"46":{"start":{"line":80,"column":0},"end":{"line":null,"column":-1}},"47":{"start":{"line":85,"column":0},"end":{"line":null,"column":-1}},"48":{"start":{"line":88,"column":0},"end":{"line":91,"column":0}},"49":{"start":{"line":89,"column":0},"end":{"line":null,"column":-1}},"50":{"start":{"line":90,"column":0},"end":{"line":null,"column":-1}},"51":{"start":{"line":93,"column":0},"end":{"line":117,"column":0}},"52":{"start":{"line":94,"column":0},"end":{"line":98,"column":0}},"53":{"start":{"line":100,"column":0},"end":{"line":114,"column":0}},"54":{"start":{"line":101,"column":0},"end":{"line":null,"column":-1}},"55":{"start":{"line":102,"column":0},"end":{"line":105,"column":0}},"56":{"start":{"line":103,"column":0},"end":{"line":null,"column":-1}},"57":{"start":{"line":104,"column":0},"end":{"line":null,"column":-1}},"58":{"start":{"line":109,"column":0},"end":{"line":null,"column":-1}},"59":{"start":{"line":110,"column":0},"end":{"line":113,"column":0}},"60":{"start":{"line":111,"column":0},"end":{"line":null,"column":-1}},"61":{"start":{"line":112,"column":0},"end":{"line":null,"column":-1}},"62":{"start":{"line":116,"column":0},"end":{"line":null,"column":-1}},"63":{"start":{"line":119,"column":0},"end":{"line":null,"column":-1}},"64":{"start":{"line":121,"column":0},"end":{"line":null,"column":-1}},"65":{"start":{"line":122,"column":0},"end":{"line":null,"column":-1}},"66":{"start":{"line":124,"column":0},"end":{"line":128,"column":0}},"67":{"start":{"line":125,"column":0},"end":{"line":127,"column":0}},"68":{"start":{"line":126,"column":0},"end":{"line":null,"column":-1}},"69":{"start":{"line":130,"column":0},"end":{"line":132,"column":0}},"70":{"start":{"line":131,"column":0},"end":{"line":null,"column":-1}},"71":{"start":{"line":134,"column":0},"end":{"line":146,"column":0}},"72":{"start":{"line":135,"column":0},"end":{"line":null,"column":-1}},"73":{"start":{"line":137,"column":0},"end":{"line":139,"column":0}},"74":{"start":{"line":141,"column":0},"end":{"line":143,"column":0}},"75":{"start":{"line":142,"column":0},"end":{"line":null,"column":-1}},"76":{"start":{"line":145,"column":0},"end":{"line":null,"column":-1}},"77":{"start":{"line":148,"column":0},"end":{"line":null,"column":-1}},"78":{"start":{"line":149,"column":0},"end":{"line":null,"column":-1}},"79":{"start":{"line":150,"column":0},"end":{"line":null,"column":-1}},"80":{"start":{"line":152,"column":0},"end":{"line":159,"column":0}},"81":{"start":{"line":153,"column":0},"end":{"line":null,"column":-1}},"82":{"start":{"line":154,"column":0},"end":{"line":158,"column":0}},"83":{"start":{"line":161,"column":0},"end":{"line":169,"column":0}},"84":{"start":{"line":162,"column":0},"end":{"line":164,"column":0}},"85":{"start":{"line":165,"column":0},"end":{"line":167,"column":0}},"86":{"start":{"line":165,"column":0},"end":{"line":null,"column":-1}},"87":{"start":{"line":166,"column":0},"end":{"line":167,"column":0}},"88":{"start":{"line":166,"column":0},"end":{"line":null,"column":-1}},"89":{"start":{"line":167,"column":0},"end":{"line":null,"column":-1}},"90":{"start":{"line":168,"column":0},"end":{"line":null,"column":-1}},"91":{"start":{"line":171,"column":0},"end":{"line":173,"column":0}},"92":{"start":{"line":172,"column":0},"end":{"line":null,"column":-1}},"93":{"start":{"line":175,"column":0},"end":{"line":237,"column":0}},"94":{"start":{"line":176,"column":0},"end":{"line":178,"column":0}},"95":{"start":{"line":180,"column":0},"end":{"line":222,"column":0}},"96":{"start":{"line":181,"column":0},"end":{"line":184,"column":0}},"97":{"start":{"line":186,"column":0},"end":{"line":188,"column":0}},"98":{"start":{"line":187,"column":0},"end":{"line":null,"column":-1}},"99":{"start":{"line":190,"column":0},"end":{"line":193,"column":0}},"100":{"start":{"line":196,"column":0},"end":{"line":null,"column":-1}},"101":{"start":{"line":199,"column":0},"end":{"line":null,"column":-1}},"102":{"start":{"line":200,"column":0},"end":{"line":null,"column":-1}},"103":{"start":{"line":201,"column":0},"end":{"line":null,"column":-1}},"104":{"start":{"line":203,"column":0},"end":{"line":204,"column":0}},"105":{"start":{"line":207,"column":0},"end":{"line":211,"column":0}},"106":{"start":{"line":208,"column":0},"end":{"line":null,"column":-1}},"107":{"start":{"line":209,"column":0},"end":{"line":null,"column":-1}},"108":{"start":{"line":210,"column":0},"end":{"line":null,"column":-1}},"109":{"start":{"line":214,"column":0},"end":{"line":219,"column":0}},"110":{"start":{"line":215,"column":0},"end":{"line":null,"column":-1}},"111":{"start":{"line":216,"column":0},"end":{"line":218,"column":0}},"112":{"start":{"line":217,"column":0},"end":{"line":null,"column":-1}},"113":{"start":{"line":221,"column":0},"end":{"line":null,"column":-1}},"114":{"start":{"line":224,"column":0},"end":{"line":226,"column":0}},"115":{"start":{"line":225,"column":0},"end":{"line":null,"column":-1}},"116":{"start":{"line":228,"column":0},"end":{"line":230,"column":0}},"117":{"start":{"line":229,"column":0},"end":{"line":null,"column":-1}},"118":{"start":{"line":232,"column":0},"end":{"line":234,"column":0}},"119":{"start":{"line":233,"column":0},"end":{"line":null,"column":-1}},"120":{"start":{"line":236,"column":0},"end":{"line":null,"column":-1}},"121":{"start":{"line":239,"column":0},"end":{"line":250,"column":0}},"122":{"start":{"line":240,"column":0},"end":{"line":null,"column":-1}},"123":{"start":{"line":241,"column":0},"end":{"line":null,"column":-1}},"124":{"start":{"line":242,"column":0},"end":{"line":null,"column":-1}},"125":{"start":{"line":243,"column":0},"end":{"line":null,"column":-1}},"126":{"start":{"line":244,"column":0},"end":{"line":248,"column":0}},"127":{"start":{"line":249,"column":0},"end":{"line":null,"column":-1}},"128":{"start":{"line":252,"column":0},"end":{"line":255,"column":0}},"129":{"start":{"line":253,"column":0},"end":{"line":null,"column":-1}},"130":{"start":{"line":254,"column":0},"end":{"line":null,"column":-1}},"131":{"start":{"line":257,"column":0},"end":{"line":259,"column":0}},"132":{"start":{"line":258,"column":0},"end":{"line":null,"column":-1}},"133":{"start":{"line":261,"column":0},"end":{"line":278,"column":0}},"134":{"start":{"line":262,"column":0},"end":{"line":265,"column":0}},"135":{"start":{"line":267,"column":0},"end":{"line":275,"column":0}},"136":{"start":{"line":268,"column":0},"end":{"line":null,"column":-1}},"137":{"start":{"line":269,"column":0},"end":{"line":null,"column":-1}},"138":{"start":{"line":273,"column":0},"end":{"line":null,"column":-1}},"139":{"start":{"line":274,"column":0},"end":{"line":null,"column":-1}},"140":{"start":{"line":277,"column":0},"end":{"line":null,"column":-1}},"141":{"start":{"line":280,"column":0},"end":{"line":296,"column":0}},"142":{"start":{"line":281,"column":0},"end":{"line":285,"column":0}},"143":{"start":{"line":287,"column":0},"end":{"line":293,"column":0}},"144":{"start":{"line":288,"column":0},"end":{"line":null,"column":-1}},"145":{"start":{"line":292,"column":0},"end":{"line":null,"column":-1}},"146":{"start":{"line":295,"column":0},"end":{"line":null,"column":-1}},"147":{"start":{"line":298,"column":0},"end":{"line":313,"column":0}},"148":{"start":{"line":299,"column":0},"end":{"line":302,"column":0}},"149":{"start":{"line":304,"column":0},"end":{"line":310,"column":0}},"150":{"start":{"line":305,"column":0},"end":{"line":null,"column":-1}},"151":{"start":{"line":309,"column":0},"end":{"line":null,"column":-1}},"152":{"start":{"line":312,"column":0},"end":{"line":null,"column":-1}},"153":{"start":{"line":315,"column":0},"end":{"line":335,"column":0}},"154":{"start":{"line":316,"column":0},"end":{"line":321,"column":0}},"155":{"start":{"line":323,"column":0},"end":{"line":null,"column":-1}},"156":{"start":{"line":324,"column":0},"end":{"line":null,"column":-1}},"157":{"start":{"line":326,"column":0},"end":{"line":332,"column":0}},"158":{"start":{"line":327,"column":0},"end":{"line":null,"column":-1}},"159":{"start":{"line":328,"column":0},"end":{"line":null,"column":-1}},"160":{"start":{"line":329,"column":0},"end":{"line":331,"column":0}},"161":{"start":{"line":330,"column":0},"end":{"line":null,"column":-1}},"162":{"start":{"line":334,"column":0},"end":{"line":null,"column":-1}},"163":{"start":{"line":337,"column":0},"end":{"line":354,"column":0}},"164":{"start":{"line":338,"column":0},"end":{"line":341,"column":0}},"165":{"start":{"line":343,"column":0},"end":{"line":351,"column":0}},"166":{"start":{"line":344,"column":0},"end":{"line":null,"column":-1}},"167":{"start":{"line":345,"column":0},"end":{"line":null,"column":-1}},"168":{"start":{"line":349,"column":0},"end":{"line":null,"column":-1}},"169":{"start":{"line":350,"column":0},"end":{"line":null,"column":-1}},"170":{"start":{"line":353,"column":0},"end":{"line":null,"column":-1}},"171":{"start":{"line":356,"column":0},"end":{"line":360,"column":0}},"172":{"start":{"line":357,"column":0},"end":{"line":null,"column":-1}},"173":{"start":{"line":358,"column":0},"end":{"line":null,"column":-1}},"174":{"start":{"line":359,"column":0},"end":{"line":null,"column":-1}},"175":{"start":{"line":362,"column":0},"end":{"line":366,"column":0}},"176":{"start":{"line":363,"column":0},"end":{"line":null,"column":-1}},"177":{"start":{"line":364,"column":0},"end":{"line":null,"column":-1}},"178":{"start":{"line":365,"column":0},"end":{"line":null,"column":-1}},"179":{"start":{"line":368,"column":0},"end":{"line":381,"column":0}},"180":{"start":{"line":369,"column":0},"end":{"line":null,"column":-1}},"181":{"start":{"line":370,"column":0},"end":{"line":374,"column":0}},"182":{"start":{"line":376,"column":0},"end":{"line":null,"column":-1}},"183":{"start":{"line":378,"column":0},"end":{"line":null,"column":-1}},"184":{"start":{"line":380,"column":0},"end":{"line":null,"column":-1}},"185":{"start":{"line":383,"column":0},"end":{"line":396,"column":0}},"186":{"start":{"line":384,"column":0},"end":{"line":386,"column":0}},"187":{"start":{"line":388,"column":0},"end":{"line":393,"column":0}},"188":{"start":{"line":389,"column":0},"end":{"line":null,"column":-1}},"189":{"start":{"line":390,"column":0},"end":{"line":null,"column":-1}},"190":{"start":{"line":391,"column":0},"end":{"line":null,"column":-1}},"191":{"start":{"line":392,"column":0},"end":{"line":null,"column":-1}},"192":{"start":{"line":395,"column":0},"end":{"line":null,"column":-1}},"193":{"start":{"line":398,"column":0},"end":{"line":413,"column":0}},"194":{"start":{"line":399,"column":0},"end":{"line":402,"column":0}},"195":{"start":{"line":404,"column":0},"end":{"line":410,"column":0}},"196":{"start":{"line":405,"column":0},"end":{"line":null,"column":-1}},"197":{"start":{"line":409,"column":0},"end":{"line":null,"column":-1}},"198":{"start":{"line":412,"column":0},"end":{"line":null,"column":-1}},"199":{"start":{"line":415,"column":0},"end":{"line":423,"column":0}},"200":{"start":{"line":416,"column":0},"end":{"line":null,"column":-1}},"201":{"start":{"line":417,"column":0},"end":{"line":421,"column":0}},"202":{"start":{"line":418,"column":0},"end":{"line":420,"column":0}},"203":{"start":{"line":419,"column":0},"end":{"line":null,"column":-1}},"204":{"start":{"line":422,"column":0},"end":{"line":null,"column":-1}},"205":{"start":{"line":425,"column":0},"end":{"line":427,"column":0}},"206":{"start":{"line":426,"column":0},"end":{"line":null,"column":-1}},"207":{"start":{"line":429,"column":0},"end":{"line":431,"column":0}},"208":{"start":{"line":430,"column":0},"end":{"line":null,"column":-1}},"209":{"start":{"line":433,"column":0},"end":{"line":null,"column":-1}},"210":{"start":{"line":434,"column":0},"end":{"line":null,"column":-1}},"211":{"start":{"line":435,"column":0},"end":{"line":null,"column":-1}},"212":{"start":{"line":436,"column":0},"end":{"line":null,"column":-1}},"213":{"start":{"line":437,"column":0},"end":{"line":null,"column":-1}},"214":{"start":{"line":438,"column":0},"end":{"line":null,"column":-1}},"215":{"start":{"line":439,"column":0},"end":{"line":null,"column":-1}},"216":{"start":{"line":440,"column":0},"end":{"line":null,"column":-1}},"217":{"start":{"line":441,"column":0},"end":{"line":null,"column":-1}},"218":{"start":{"line":442,"column":0},"end":{"line":null,"column":-1}},"219":{"start":{"line":443,"column":0},"end":{"line":null,"column":-1}},"220":{"start":{"line":444,"column":0},"end":{"line":null,"column":-1}},"221":{"start":{"line":445,"column":0},"end":{"line":null,"column":-1}},"222":{"start":{"line":446,"column":0},"end":{"line":null,"column":-1}},"223":{"start":{"line":447,"column":0},"end":{"line":null,"column":-1}},"224":{"start":{"line":448,"column":0},"end":{"line":null,"column":-1}},"225":{"start":{"line":449,"column":0},"end":{"line":null,"column":-1}},"226":{"start":{"line":450,"column":0},"end":{"line":null,"column":-1}},"227":{"start":{"line":451,"column":0},"end":{"line":null,"column":-1}},"228":{"start":{"line":452,"column":0},"end":{"line":null,"column":-1}},"229":{"start":{"line":453,"column":0},"end":{"line":null,"column":-1}},"230":{"start":{"line":454,"column":0},"end":{"line":null,"column":-1}},"231":{"start":{"line":455,"column":0},"end":{"line":null,"column":-1}},"232":{"start":{"line":456,"column":0},"end":{"line":null,"column":-1}},"233":{"start":{"line":457,"column":0},"end":{"line":null,"column":-1}},"234":{"start":{"line":458,"column":0},"end":{"line":null,"column":-1}},"235":{"start":{"line":459,"column":0},"end":{"line":null,"column":-1}},"236":{"start":{"line":460,"column":0},"end":{"line":null,"column":-1}},"237":{"start":{"line":461,"column":0},"end":{"line":null,"column":-1}},"238":{"start":{"line":463,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_7)","line":2,"loc":{"start":{"line":2,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"(anonymous_8)","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":null,"column":-1}}},"3":{"name":"(anonymous_9)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_10)","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_11)","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_12)","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":null,"column":-1}}},"7":{"name":"ascendingComparator","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_14)","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_15)","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_16)","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_17)","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_18)","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_19)","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_20)","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_21)","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_22)","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_23)","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_24)","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":null,"column":-1}}},"19":{"name":"tickStep","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_26)","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":null,"column":-1}}},"21":{"name":"(anonymous_27)","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":null,"column":-1}}},"22":{"name":"histogram","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":null,"column":-1}}},"23":{"name":"(anonymous_29)","line":224,"loc":{"start":{"line":224,"column":0},"end":{"line":null,"column":-1}}},"24":{"name":"(anonymous_30)","line":228,"loc":{"start":{"line":228,"column":0},"end":{"line":null,"column":-1}}},"25":{"name":"(anonymous_31)","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":null,"column":-1}}},"26":{"name":"(anonymous_32)","line":239,"loc":{"start":{"line":239,"column":0},"end":{"line":null,"column":-1}}},"27":{"name":"(anonymous_33)","line":252,"loc":{"start":{"line":252,"column":0},"end":{"line":null,"column":-1}}},"28":{"name":"(anonymous_34)","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":null,"column":-1}}},"29":{"name":"(anonymous_35)","line":261,"loc":{"start":{"line":261,"column":0},"end":{"line":null,"column":-1}}},"30":{"name":"(anonymous_36)","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":null,"column":-1}}},"31":{"name":"(anonymous_37)","line":298,"loc":{"start":{"line":298,"column":0},"end":{"line":null,"column":-1}}},"32":{"name":"(anonymous_38)","line":315,"loc":{"start":{"line":315,"column":0},"end":{"line":null,"column":-1}}},"33":{"name":"(anonymous_39)","line":337,"loc":{"start":{"line":337,"column":0},"end":{"line":null,"column":-1}}},"34":{"name":"(anonymous_40)","line":356,"loc":{"start":{"line":356,"column":0},"end":{"line":null,"column":-1}}},"35":{"name":"(anonymous_41)","line":362,"loc":{"start":{"line":362,"column":0},"end":{"line":null,"column":-1}}},"36":{"name":"(anonymous_42)","line":368,"loc":{"start":{"line":368,"column":0},"end":{"line":null,"column":-1}}},"37":{"name":"(anonymous_43)","line":383,"loc":{"start":{"line":383,"column":0},"end":{"line":null,"column":-1}}},"38":{"name":"(anonymous_44)","line":398,"loc":{"start":{"line":398,"column":0},"end":{"line":null,"column":-1}}},"39":{"name":"(anonymous_45)","line":415,"loc":{"start":{"line":415,"column":0},"end":{"line":null,"column":-1}}},"40":{"name":"length","line":425,"loc":{"start":{"line":425,"column":0},"end":{"line":null,"column":-1}}},"41":{"name":"(anonymous_47)","line":429,"loc":{"start":{"line":429,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}}]},"3":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}}]},"6":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}]},"7":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}]},"8":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":16,"column":0},"end":{"line":null,"column":-1}}]},"9":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":17,"column":0},"end":{"line":null,"column":-1}}]},"10":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}}]},"11":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}}]},"12":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":27,"column":0},"end":{"line":null,"column":-1}}]},"13":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}}]},"14":{"line":49,"type":"cond-expr","locations":[{"start":{"line":49,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":49,"column":0},"end":{"line":null,"column":-1}}]},"15":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":53,"column":0},"end":{"line":null,"column":-1}}]},"16":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":65,"column":0},"end":{"line":null,"column":-1}}]},"17":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":67,"column":0},"end":{"line":null,"column":-1}}]},"18":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":77,"column":0},"end":{"line":null,"column":-1}}]},"19":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":85,"column":0},"end":{"line":null,"column":-1}}]},"20":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":90,"column":0},"end":{"line":null,"column":-1}}]},"21":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":100,"column":0},"end":{"line":null,"column":-1}}]},"22":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":101,"column":0},"end":{"line":null,"column":-1}}]},"23":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":102,"column":0},"end":{"line":null,"column":-1}}]},"24":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":103,"column":0},"end":{"line":null,"column":-1}}]},"25":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":104,"column":0},"end":{"line":null,"column":-1}}]},"26":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":109,"column":0},"end":{"line":null,"column":-1}}]},"27":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":110,"column":0},"end":{"line":null,"column":-1}}]},"28":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":111,"column":0},"end":{"line":null,"column":-1}}]},"29":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":112,"column":0},"end":{"line":null,"column":-1}}]},"30":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":135,"column":0},"end":{"line":null,"column":-1}}]},"31":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":165,"column":0},"end":{"line":null,"column":-1}}]},"32":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":166,"column":0},"end":{"line":null,"column":-1}}]},"33":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":167,"column":0},"end":{"line":null,"column":-1}}]},"34":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":168,"column":0},"end":{"line":null,"column":-1}}]},"35":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":196,"column":0},"end":{"line":null,"column":-1}}]},"36":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":209,"column":0},"end":{"line":null,"column":-1}}]},"37":{"line":210,"type":"cond-expr","locations":[{"start":{"line":210,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":210,"column":0},"end":{"line":null,"column":-1}}]},"38":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":216,"column":0},"end":{"line":null,"column":-1}}]},"39":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":225,"column":0},"end":{"line":null,"column":-1}}]},"40":{"line":229,"type":"cond-expr","locations":[{"start":{"line":229,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":229,"column":0},"end":{"line":null,"column":-1}}]},"41":{"line":233,"type":"cond-expr","locations":[{"start":{"line":233,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":233,"column":0},"end":{"line":null,"column":-1}}]},"42":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":240,"column":0},"end":{"line":null,"column":-1}}]},"43":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":241,"column":0},"end":{"line":null,"column":-1}}]},"44":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":242,"column":0},"end":{"line":null,"column":-1}}]},"45":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":243,"column":0},"end":{"line":null,"column":-1}}]},"46":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":267,"column":0},"end":{"line":null,"column":-1}}]},"47":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":268,"column":0},"end":{"line":null,"column":-1}}]},"48":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":269,"column":0},"end":{"line":null,"column":-1}}]},"49":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":273,"column":0},"end":{"line":null,"column":-1}}]},"50":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":274,"column":0},"end":{"line":null,"column":-1}}]},"51":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":287,"column":0},"end":{"line":null,"column":-1}}]},"52":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":288,"column":0},"end":{"line":null,"column":-1}}]},"53":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":292,"column":0},"end":{"line":null,"column":-1}}]},"54":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":295,"column":0},"end":{"line":null,"column":-1}}]},"55":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":304,"column":0},"end":{"line":null,"column":-1}}]},"56":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":305,"column":0},"end":{"line":null,"column":-1}}]},"57":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":309,"column":0},"end":{"line":null,"column":-1}}]},"58":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":343,"column":0},"end":{"line":null,"column":-1}}]},"59":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":344,"column":0},"end":{"line":null,"column":-1}}]},"60":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":345,"column":0},"end":{"line":null,"column":-1}}]},"61":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":349,"column":0},"end":{"line":null,"column":-1}}]},"62":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":350,"column":0},"end":{"line":null,"column":-1}}]},"63":{"line":357,"type":"cond-expr","locations":[{"start":{"line":357,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":357,"column":0},"end":{"line":null,"column":-1}}]},"64":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":369,"column":0},"end":{"line":null,"column":-1}}]},"65":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":376,"column":0},"end":{"line":null,"column":-1}}]},"66":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":378,"column":0},"end":{"line":null,"column":-1}}]},"67":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":380,"column":0},"end":{"line":null,"column":-1}}]},"68":{"line":384,"type":"cond-expr","locations":[{"start":{"line":384,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":384,"column":0},"end":{"line":null,"column":-1}}]},"69":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":404,"column":0},"end":{"line":null,"column":-1}}]},"70":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":405,"column":0},"end":{"line":null,"column":-1}}]},"71":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":409,"column":0},"end":{"line":null,"column":-1}}]},"72":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":416,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":1,"79":1,"80":1,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":1,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":1,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":1,"208":0,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"code":"// https://d3js.org/d3-array/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","l":{"2":1,"3":1,"8":1,"9":0,"12":1,"13":1,"14":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"38":1,"39":0,"40":0,"44":1,"45":1,"46":1,"48":1,"49":0,"52":1,"53":0,"56":1,"57":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"76":0,"77":0,"78":0,"79":0,"80":0,"85":0,"88":1,"89":0,"90":0,"93":1,"94":0,"100":0,"101":0,"102":0,"103":0,"104":0,"109":0,"110":0,"111":0,"112":0,"116":0,"119":1,"121":1,"122":1,"124":1,"125":0,"126":0,"130":1,"131":0,"134":1,"135":0,"137":0,"141":0,"142":0,"145":0,"148":1,"149":1,"150":1,"152":1,"153":0,"154":0,"161":1,"162":0,"165":0,"166":0,"167":0,"168":0,"171":1,"172":0,"175":1,"176":0,"180":1,"181":0,"186":0,"187":0,"190":0,"196":0,"199":0,"200":0,"201":0,"203":0,"207":0,"208":0,"209":0,"210":0,"214":0,"215":0,"216":0,"217":0,"221":0,"224":0,"225":0,"228":0,"229":0,"232":0,"233":0,"236":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"249":0,"252":1,"253":0,"254":0,"257":1,"258":0,"261":1,"262":0,"267":0,"268":0,"269":0,"273":0,"274":0,"277":0,"280":1,"281":0,"287":0,"288":0,"292":0,"295":0,"298":1,"299":0,"304":0,"305":0,"309":0,"312":0,"315":1,"316":0,"323":0,"324":0,"326":0,"327":0,"328":0,"329":0,"330":0,"334":0,"337":1,"338":0,"343":0,"344":0,"345":0,"349":0,"350":0,"353":0,"356":1,"357":0,"358":0,"359":0,"362":1,"363":0,"364":0,"365":0,"368":1,"369":0,"370":0,"376":0,"378":0,"380":0,"383":1,"384":0,"388":0,"389":0,"390":0,"391":0,"392":0,"395":0,"398":1,"399":0,"404":0,"405":0,"409":0,"412":0,"415":1,"416":0,"417":0,"418":0,"419":0,"422":0,"425":1,"426":0,"429":1,"430":0,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"463":1}},
"node_modules/d3-time/build/d3-time.js":{"path":"node_modules/d3-time/build/d3-time.js","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":378,"column":0}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":0}},"3":{"start":{"line":8,"column":0},"end":{"line":null,"column":-1}},"4":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}},"5":{"start":{"line":11,"column":0},"end":{"line":68,"column":0}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":0}},"7":{"start":{"line":14,"column":0},"end":{"line":null,"column":-1}},"8":{"start":{"line":17,"column":0},"end":{"line":null,"column":-1}},"9":{"start":{"line":19,"column":0},"end":{"line":21,"column":0}},"10":{"start":{"line":20,"column":0},"end":{"line":null,"column":-1}},"11":{"start":{"line":23,"column":0},"end":{"line":27,"column":0}},"12":{"start":{"line":24,"column":0},"end":{"line":25,"column":0}},"13":{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}},"14":{"start":{"line":29,"column":0},"end":{"line":31,"column":0}},"15":{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}},"16":{"start":{"line":33,"column":0},"end":{"line":40,"column":0}},"17":{"start":{"line":34,"column":0},"end":{"line":null,"column":-1}},"18":{"start":{"line":35,"column":0},"end":{"line":null,"column":-1}},"19":{"start":{"line":36,"column":0},"end":{"line":null,"column":-1}},"20":{"start":{"line":37,"column":0},"end":{"line":null,"column":-1}},"21":{"start":{"line":38,"column":0},"end":{"line":null,"column":-1}},"22":{"start":{"line":39,"column":0},"end":{"line":null,"column":-1}},"23":{"start":{"line":42,"column":0},"end":{"line":48,"column":0}},"24":{"start":{"line":43,"column":0},"end":{"line":47,"column":0}},"25":{"start":{"line":44,"column":0},"end":{"line":null,"column":-1}},"26":{"start":{"line":46,"column":0},"end":{"line":null,"column":-1}},"27":{"start":{"line":50,"column":0},"end":{"line":65,"column":0}},"28":{"start":{"line":51,"column":0},"end":{"line":55,"column":0}},"29":{"start":{"line":52,"column":0},"end":{"line":null,"column":-1}},"30":{"start":{"line":53,"column":0},"end":{"line":null,"column":-1}},"31":{"start":{"line":54,"column":0},"end":{"line":null,"column":-1}},"32":{"start":{"line":57,"column":0},"end":{"line":64,"column":0}},"33":{"start":{"line":58,"column":0},"end":{"line":null,"column":-1}},"34":{"start":{"line":59,"column":0},"end":{"line":63,"column":0}},"35":{"start":{"line":62,"column":0},"end":{"line":null,"column":-1}},"36":{"start":{"line":63,"column":0},"end":{"line":null,"column":-1}},"37":{"start":{"line":67,"column":0},"end":{"line":null,"column":-1}},"38":{"start":{"line":70,"column":0},"end":{"line":76,"column":0}},"39":{"start":{"line":73,"column":0},"end":{"line":null,"column":-1}},"40":{"start":{"line":75,"column":0},"end":{"line":null,"column":-1}},"41":{"start":{"line":79,"column":0},"end":{"line":90,"column":0}},"42":{"start":{"line":80,"column":0},"end":{"line":null,"column":-1}},"43":{"start":{"line":81,"column":0},"end":{"line":null,"column":-1}},"44":{"start":{"line":82,"column":0},"end":{"line":null,"column":-1}},"45":{"start":{"line":83,"column":0},"end":{"line":89,"column":0}},"46":{"start":{"line":84,"column":0},"end":{"line":null,"column":-1}},"47":{"start":{"line":86,"column":0},"end":{"line":null,"column":-1}},"48":{"start":{"line":88,"column":0},"end":{"line":null,"column":-1}},"49":{"start":{"line":92,"column":0},"end":{"line":null,"column":-1}},"50":{"start":{"line":94,"column":0},"end":{"line":null,"column":-1}},"51":{"start":{"line":95,"column":0},"end":{"line":null,"column":-1}},"52":{"start":{"line":96,"column":0},"end":{"line":null,"column":-1}},"53":{"start":{"line":97,"column":0},"end":{"line":null,"column":-1}},"54":{"start":{"line":98,"column":0},"end":{"line":null,"column":-1}},"55":{"start":{"line":100,"column":0},"end":{"line":108,"column":0}},"56":{"start":{"line":101,"column":0},"end":{"line":null,"column":-1}},"57":{"start":{"line":103,"column":0},"end":{"line":null,"column":-1}},"58":{"start":{"line":105,"column":0},"end":{"line":null,"column":-1}},"59":{"start":{"line":107,"column":0},"end":{"line":null,"column":-1}},"60":{"start":{"line":110,"column":0},"end":{"line":null,"column":-1}},"61":{"start":{"line":112,"column":0},"end":{"line":120,"column":0}},"62":{"start":{"line":113,"column":0},"end":{"line":null,"column":-1}},"63":{"start":{"line":115,"column":0},"end":{"line":null,"column":-1}},"64":{"start":{"line":117,"column":0},"end":{"line":null,"column":-1}},"65":{"start":{"line":119,"column":0},"end":{"line":null,"column":-1}},"66":{"start":{"line":122,"column":0},"end":{"line":null,"column":-1}},"67":{"start":{"line":124,"column":0},"end":{"line":134,"column":0}},"68":{"start":{"line":125,"column":0},"end":{"line":null,"column":-1}},"69":{"start":{"line":126,"column":0},"end":{"line":null,"column":-1}},"70":{"start":{"line":127,"column":0},"end":{"line":null,"column":-1}},"71":{"start":{"line":129,"column":0},"end":{"line":null,"column":-1}},"72":{"start":{"line":131,"column":0},"end":{"line":null,"column":-1}},"73":{"start":{"line":133,"column":0},"end":{"line":null,"column":-1}},"74":{"start":{"line":136,"column":0},"end":{"line":null,"column":-1}},"75":{"start":{"line":138,"column":0},"end":{"line":146,"column":0}},"76":{"start":{"line":139,"column":0},"end":{"line":null,"column":-1}},"77":{"start":{"line":141,"column":0},"end":{"line":null,"column":-1}},"78":{"start":{"line":143,"column":0},"end":{"line":null,"column":-1}},"79":{"start":{"line":145,"column":0},"end":{"line":null,"column":-1}},"80":{"start":{"line":148,"column":0},"end":{"line":null,"column":-1}},"81":{"start":{"line":150,"column":0},"end":{"line":159,"column":0}},"82":{"start":{"line":151,"column":0},"end":{"line":158,"column":0}},"83":{"start":{"line":152,"column":0},"end":{"line":null,"column":-1}},"84":{"start":{"line":153,"column":0},"end":{"line":null,"column":-1}},"85":{"start":{"line":155,"column":0},"end":{"line":null,"column":-1}},"86":{"start":{"line":157,"column":0},"end":{"line":null,"column":-1}},"87":{"start":{"line":161,"column":0},"end":{"line":null,"column":-1}},"88":{"start":{"line":162,"column":0},"end":{"line":null,"column":-1}},"89":{"start":{"line":163,"column":0},"end":{"line":null,"column":-1}},"90":{"start":{"line":164,"column":0},"end":{"line":null,"column":-1}},"91":{"start":{"line":165,"column":0},"end":{"line":null,"column":-1}},"92":{"start":{"line":166,"column":0},"end":{"line":null,"column":-1}},"93":{"start":{"line":167,"column":0},"end":{"line":null,"column":-1}},"94":{"start":{"line":169,"column":0},"end":{"line":null,"column":-1}},"95":{"start":{"line":170,"column":0},"end":{"line":null,"column":-1}},"96":{"start":{"line":171,"column":0},"end":{"line":null,"column":-1}},"97":{"start":{"line":172,"column":0},"end":{"line":null,"column":-1}},"98":{"start":{"line":173,"column":0},"end":{"line":null,"column":-1}},"99":{"start":{"line":174,"column":0},"end":{"line":null,"column":-1}},"100":{"start":{"line":175,"column":0},"end":{"line":null,"column":-1}},"101":{"start":{"line":177,"column":0},"end":{"line":186,"column":0}},"102":{"start":{"line":178,"column":0},"end":{"line":null,"column":-1}},"103":{"start":{"line":179,"column":0},"end":{"line":null,"column":-1}},"104":{"start":{"line":181,"column":0},"end":{"line":null,"column":-1}},"105":{"start":{"line":183,"column":0},"end":{"line":null,"column":-1}},"106":{"start":{"line":185,"column":0},"end":{"line":null,"column":-1}},"107":{"start":{"line":188,"column":0},"end":{"line":null,"column":-1}},"108":{"start":{"line":190,"column":0},"end":{"line":199,"column":0}},"109":{"start":{"line":191,"column":0},"end":{"line":null,"column":-1}},"110":{"start":{"line":192,"column":0},"end":{"line":null,"column":-1}},"111":{"start":{"line":194,"column":0},"end":{"line":null,"column":-1}},"112":{"start":{"line":196,"column":0},"end":{"line":null,"column":-1}},"113":{"start":{"line":198,"column":0},"end":{"line":null,"column":-1}},"114":{"start":{"line":202,"column":0},"end":{"line":210,"column":0}},"115":{"start":{"line":203,"column":0},"end":{"line":209,"column":0}},"116":{"start":{"line":204,"column":0},"end":{"line":null,"column":-1}},"117":{"start":{"line":205,"column":0},"end":{"line":null,"column":-1}},"118":{"start":{"line":206,"column":0},"end":{"line":null,"column":-1}},"119":{"start":{"line":208,"column":0},"end":{"line":null,"column":-1}},"120":{"start":{"line":212,"column":0},"end":{"line":null,"column":-1}},"121":{"start":{"line":214,"column":0},"end":{"line":222,"column":0}},"122":{"start":{"line":215,"column":0},"end":{"line":null,"column":-1}},"123":{"start":{"line":217,"column":0},"end":{"line":null,"column":-1}},"124":{"start":{"line":219,"column":0},"end":{"line":null,"column":-1}},"125":{"start":{"line":221,"column":0},"end":{"line":null,"column":-1}},"126":{"start":{"line":224,"column":0},"end":{"line":null,"column":-1}},"127":{"start":{"line":226,"column":0},"end":{"line":234,"column":0}},"128":{"start":{"line":227,"column":0},"end":{"line":null,"column":-1}},"129":{"start":{"line":229,"column":0},"end":{"line":null,"column":-1}},"130":{"start":{"line":231,"column":0},"end":{"line":null,"column":-1}},"131":{"start":{"line":233,"column":0},"end":{"line":null,"column":-1}},"132":{"start":{"line":236,"column":0},"end":{"line":null,"column":-1}},"133":{"start":{"line":238,"column":0},"end":{"line":246,"column":0}},"134":{"start":{"line":239,"column":0},"end":{"line":null,"column":-1}},"135":{"start":{"line":241,"column":0},"end":{"line":null,"column":-1}},"136":{"start":{"line":243,"column":0},"end":{"line":null,"column":-1}},"137":{"start":{"line":245,"column":0},"end":{"line":null,"column":-1}},"138":{"start":{"line":248,"column":0},"end":{"line":null,"column":-1}},"139":{"start":{"line":250,"column":0},"end":{"line":259,"column":0}},"140":{"start":{"line":251,"column":0},"end":{"line":258,"column":0}},"141":{"start":{"line":252,"column":0},"end":{"line":null,"column":-1}},"142":{"start":{"line":253,"column":0},"end":{"line":null,"column":-1}},"143":{"start":{"line":255,"column":0},"end":{"line":null,"column":-1}},"144":{"start":{"line":257,"column":0},"end":{"line":null,"column":-1}},"145":{"start":{"line":261,"column":0},"end":{"line":null,"column":-1}},"146":{"start":{"line":262,"column":0},"end":{"line":null,"column":-1}},"147":{"start":{"line":263,"column":0},"end":{"line":null,"column":-1}},"148":{"start":{"line":264,"column":0},"end":{"line":null,"column":-1}},"149":{"start":{"line":265,"column":0},"end":{"line":null,"column":-1}},"150":{"start":{"line":266,"column":0},"end":{"line":null,"column":-1}},"151":{"start":{"line":267,"column":0},"end":{"line":null,"column":-1}},"152":{"start":{"line":269,"column":0},"end":{"line":null,"column":-1}},"153":{"start":{"line":270,"column":0},"end":{"line":null,"column":-1}},"154":{"start":{"line":271,"column":0},"end":{"line":null,"column":-1}},"155":{"start":{"line":272,"column":0},"end":{"line":null,"column":-1}},"156":{"start":{"line":273,"column":0},"end":{"line":null,"column":-1}},"157":{"start":{"line":274,"column":0},"end":{"line":null,"column":-1}},"158":{"start":{"line":275,"column":0},"end":{"line":null,"column":-1}},"159":{"start":{"line":277,"column":0},"end":{"line":286,"column":0}},"160":{"start":{"line":278,"column":0},"end":{"line":null,"column":-1}},"161":{"start":{"line":279,"column":0},"end":{"line":null,"column":-1}},"162":{"start":{"line":281,"column":0},"end":{"line":null,"column":-1}},"163":{"start":{"line":283,"column":0},"end":{"line":null,"column":-1}},"164":{"start":{"line":285,"column":0},"end":{"line":null,"column":-1}},"165":{"start":{"line":288,"column":0},"end":{"line":null,"column":-1}},"166":{"start":{"line":290,"column":0},"end":{"line":299,"column":0}},"167":{"start":{"line":291,"column":0},"end":{"line":null,"column":-1}},"168":{"start":{"line":292,"column":0},"end":{"line":null,"column":-1}},"169":{"start":{"line":294,"column":0},"end":{"line":null,"column":-1}},"170":{"start":{"line":296,"column":0},"end":{"line":null,"column":-1}},"171":{"start":{"line":298,"column":0},"end":{"line":null,"column":-1}},"172":{"start":{"line":302,"column":0},"end":{"line":310,"column":0}},"173":{"start":{"line":303,"column":0},"end":{"line":309,"column":0}},"174":{"start":{"line":304,"column":0},"end":{"line":null,"column":-1}},"175":{"start":{"line":305,"column":0},"end":{"line":null,"column":-1}},"176":{"start":{"line":306,"column":0},"end":{"line":null,"column":-1}},"177":{"start":{"line":308,"column":0},"end":{"line":null,"column":-1}},"178":{"start":{"line":312,"column":0},"end":{"line":null,"column":-1}},"179":{"start":{"line":314,"column":0},"end":{"line":null,"column":-1}},"180":{"start":{"line":315,"column":0},"end":{"line":null,"column":-1}},"181":{"start":{"line":316,"column":0},"end":{"line":null,"column":-1}},"182":{"start":{"line":317,"column":0},"end":{"line":null,"column":-1}},"183":{"start":{"line":318,"column":0},"end":{"line":null,"column":-1}},"184":{"start":{"line":319,"column":0},"end":{"line":null,"column":-1}},"185":{"start":{"line":320,"column":0},"end":{"line":null,"column":-1}},"186":{"start":{"line":321,"column":0},"end":{"line":null,"column":-1}},"187":{"start":{"line":322,"column":0},"end":{"line":null,"column":-1}},"188":{"start":{"line":323,"column":0},"end":{"line":null,"column":-1}},"189":{"start":{"line":324,"column":0},"end":{"line":null,"column":-1}},"190":{"start":{"line":325,"column":0},"end":{"line":null,"column":-1}},"191":{"start":{"line":326,"column":0},"end":{"line":null,"column":-1}},"192":{"start":{"line":327,"column":0},"end":{"line":null,"column":-1}},"193":{"start":{"line":328,"column":0},"end":{"line":null,"column":-1}},"194":{"start":{"line":329,"column":0},"end":{"line":null,"column":-1}},"195":{"start":{"line":330,"column":0},"end":{"line":null,"column":-1}},"196":{"start":{"line":331,"column":0},"end":{"line":null,"column":-1}},"197":{"start":{"line":332,"column":0},"end":{"line":null,"column":-1}},"198":{"start":{"line":333,"column":0},"end":{"line":null,"column":-1}},"199":{"start":{"line":334,"column":0},"end":{"line":null,"column":-1}},"200":{"start":{"line":335,"column":0},"end":{"line":null,"column":-1}},"201":{"start":{"line":336,"column":0},"end":{"line":null,"column":-1}},"202":{"start":{"line":337,"column":0},"end":{"line":null,"column":-1}},"203":{"start":{"line":338,"column":0},"end":{"line":null,"column":-1}},"204":{"start":{"line":339,"column":0},"end":{"line":null,"column":-1}},"205":{"start":{"line":340,"column":0},"end":{"line":null,"column":-1}},"206":{"start":{"line":341,"column":0},"end":{"line":null,"column":-1}},"207":{"start":{"line":342,"column":0},"end":{"line":null,"column":-1}},"208":{"start":{"line":343,"column":0},"end":{"line":null,"column":-1}},"209":{"start":{"line":344,"column":0},"end":{"line":null,"column":-1}},"210":{"start":{"line":345,"column":0},"end":{"line":null,"column":-1}},"211":{"start":{"line":346,"column":0},"end":{"line":null,"column":-1}},"212":{"start":{"line":347,"column":0},"end":{"line":null,"column":-1}},"213":{"start":{"line":348,"column":0},"end":{"line":null,"column":-1}},"214":{"start":{"line":349,"column":0},"end":{"line":null,"column":-1}},"215":{"start":{"line":350,"column":0},"end":{"line":null,"column":-1}},"216":{"start":{"line":351,"column":0},"end":{"line":null,"column":-1}},"217":{"start":{"line":352,"column":0},"end":{"line":null,"column":-1}},"218":{"start":{"line":353,"column":0},"end":{"line":null,"column":-1}},"219":{"start":{"line":354,"column":0},"end":{"line":null,"column":-1}},"220":{"start":{"line":355,"column":0},"end":{"line":null,"column":-1}},"221":{"start":{"line":356,"column":0},"end":{"line":null,"column":-1}},"222":{"start":{"line":357,"column":0},"end":{"line":null,"column":-1}},"223":{"start":{"line":358,"column":0},"end":{"line":null,"column":-1}},"224":{"start":{"line":359,"column":0},"end":{"line":null,"column":-1}},"225":{"start":{"line":360,"column":0},"end":{"line":null,"column":-1}},"226":{"start":{"line":361,"column":0},"end":{"line":null,"column":-1}},"227":{"start":{"line":362,"column":0},"end":{"line":null,"column":-1}},"228":{"start":{"line":363,"column":0},"end":{"line":null,"column":-1}},"229":{"start":{"line":364,"column":0},"end":{"line":null,"column":-1}},"230":{"start":{"line":365,"column":0},"end":{"line":null,"column":-1}},"231":{"start":{"line":366,"column":0},"end":{"line":null,"column":-1}},"232":{"start":{"line":367,"column":0},"end":{"line":null,"column":-1}},"233":{"start":{"line":368,"column":0},"end":{"line":null,"column":-1}},"234":{"start":{"line":369,"column":0},"end":{"line":null,"column":-1}},"235":{"start":{"line":370,"column":0},"end":{"line":null,"column":-1}},"236":{"start":{"line":371,"column":0},"end":{"line":null,"column":-1}},"237":{"start":{"line":372,"column":0},"end":{"line":null,"column":-1}},"238":{"start":{"line":373,"column":0},"end":{"line":null,"column":-1}},"239":{"start":{"line":374,"column":0},"end":{"line":null,"column":-1}},"240":{"start":{"line":376,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_49)","line":2,"loc":{"start":{"line":2,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"(anonymous_50)","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":null,"column":-1}}},"3":{"name":"newInterval","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"interval","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_53)","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_54)","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_55)","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_56)","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_57)","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_58)","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":null,"column":-1}}},"11":{"name":"(anonymous_59)","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":null,"column":-1}}},"12":{"name":"(anonymous_60)","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":null,"column":-1}}},"13":{"name":"(anonymous_61)","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":null,"column":-1}}},"14":{"name":"(anonymous_62)","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":null,"column":-1}}},"15":{"name":"(anonymous_63)","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":null,"column":-1}}},"16":{"name":"(anonymous_64)","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":null,"column":-1}}},"17":{"name":"(anonymous_65)","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":null,"column":-1}}},"18":{"name":"(anonymous_66)","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":null,"column":-1}}},"19":{"name":"(anonymous_67)","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":null,"column":-1}}},"20":{"name":"(anonymous_68)","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":null,"column":-1}}},"21":{"name":"(anonymous_69)","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":null,"column":-1}}},"22":{"name":"(anonymous_70)","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":null,"column":-1}}},"23":{"name":"(anonymous_71)","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":null,"column":-1}}},"24":{"name":"(anonymous_72)","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":null,"column":-1}}},"25":{"name":"(anonymous_73)","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":null,"column":-1}}},"26":{"name":"(anonymous_74)","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":null,"column":-1}}},"27":{"name":"(anonymous_75)","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":null,"column":-1}}},"28":{"name":"(anonymous_76)","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":null,"column":-1}}},"29":{"name":"(anonymous_77)","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":null,"column":-1}}},"30":{"name":"(anonymous_78)","line":118,"loc":{"start":{"line":118,"column":0},"end":{"line":null,"column":-1}}},"31":{"name":"(anonymous_79)","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":null,"column":-1}}},"32":{"name":"(anonymous_80)","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":null,"column":-1}}},"33":{"name":"(anonymous_81)","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":null,"column":-1}}},"34":{"name":"(anonymous_82)","line":132,"loc":{"start":{"line":132,"column":0},"end":{"line":null,"column":-1}}},"35":{"name":"(anonymous_83)","line":138,"loc":{"start":{"line":138,"column":0},"end":{"line":null,"column":-1}}},"36":{"name":"(anonymous_84)","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":null,"column":-1}}},"37":{"name":"(anonymous_85)","line":142,"loc":{"start":{"line":142,"column":0},"end":{"line":null,"column":-1}}},"38":{"name":"(anonymous_86)","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":null,"column":-1}}},"39":{"name":"weekday","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":null,"column":-1}}},"40":{"name":"(anonymous_88)","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":null,"column":-1}}},"41":{"name":"(anonymous_89)","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":null,"column":-1}}},"42":{"name":"(anonymous_90)","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":null,"column":-1}}},"43":{"name":"(anonymous_91)","line":177,"loc":{"start":{"line":177,"column":0},"end":{"line":null,"column":-1}}},"44":{"name":"(anonymous_92)","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":null,"column":-1}}},"45":{"name":"(anonymous_93)","line":182,"loc":{"start":{"line":182,"column":0},"end":{"line":null,"column":-1}}},"46":{"name":"(anonymous_94)","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":null,"column":-1}}},"47":{"name":"(anonymous_95)","line":190,"loc":{"start":{"line":190,"column":0},"end":{"line":null,"column":-1}}},"48":{"name":"(anonymous_96)","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":null,"column":-1}}},"49":{"name":"(anonymous_97)","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":null,"column":-1}}},"50":{"name":"(anonymous_98)","line":197,"loc":{"start":{"line":197,"column":0},"end":{"line":null,"column":-1}}},"51":{"name":"(anonymous_99)","line":202,"loc":{"start":{"line":202,"column":0},"end":{"line":null,"column":-1}}},"52":{"name":"(anonymous_100)","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":null,"column":-1}}},"53":{"name":"(anonymous_101)","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":null,"column":-1}}},"54":{"name":"(anonymous_102)","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":null,"column":-1}}},"55":{"name":"(anonymous_103)","line":216,"loc":{"start":{"line":216,"column":0},"end":{"line":null,"column":-1}}},"56":{"name":"(anonymous_104)","line":218,"loc":{"start":{"line":218,"column":0},"end":{"line":null,"column":-1}}},"57":{"name":"(anonymous_105)","line":220,"loc":{"start":{"line":220,"column":0},"end":{"line":null,"column":-1}}},"58":{"name":"(anonymous_106)","line":226,"loc":{"start":{"line":226,"column":0},"end":{"line":null,"column":-1}}},"59":{"name":"(anonymous_107)","line":228,"loc":{"start":{"line":228,"column":0},"end":{"line":null,"column":-1}}},"60":{"name":"(anonymous_108)","line":230,"loc":{"start":{"line":230,"column":0},"end":{"line":null,"column":-1}}},"61":{"name":"(anonymous_109)","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":null,"column":-1}}},"62":{"name":"(anonymous_110)","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":null,"column":-1}}},"63":{"name":"(anonymous_111)","line":240,"loc":{"start":{"line":240,"column":0},"end":{"line":null,"column":-1}}},"64":{"name":"(anonymous_112)","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":null,"column":-1}}},"65":{"name":"(anonymous_113)","line":244,"loc":{"start":{"line":244,"column":0},"end":{"line":null,"column":-1}}},"66":{"name":"utcWeekday","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":null,"column":-1}}},"67":{"name":"(anonymous_115)","line":251,"loc":{"start":{"line":251,"column":0},"end":{"line":null,"column":-1}}},"68":{"name":"(anonymous_116)","line":254,"loc":{"start":{"line":254,"column":0},"end":{"line":null,"column":-1}}},"69":{"name":"(anonymous_117)","line":256,"loc":{"start":{"line":256,"column":0},"end":{"line":null,"column":-1}}},"70":{"name":"(anonymous_118)","line":277,"loc":{"start":{"line":277,"column":0},"end":{"line":null,"column":-1}}},"71":{"name":"(anonymous_119)","line":280,"loc":{"start":{"line":280,"column":0},"end":{"line":null,"column":-1}}},"72":{"name":"(anonymous_120)","line":282,"loc":{"start":{"line":282,"column":0},"end":{"line":null,"column":-1}}},"73":{"name":"(anonymous_121)","line":284,"loc":{"start":{"line":284,"column":0},"end":{"line":null,"column":-1}}},"74":{"name":"(anonymous_122)","line":290,"loc":{"start":{"line":290,"column":0},"end":{"line":null,"column":-1}}},"75":{"name":"(anonymous_123)","line":293,"loc":{"start":{"line":293,"column":0},"end":{"line":null,"column":-1}}},"76":{"name":"(anonymous_124)","line":295,"loc":{"start":{"line":295,"column":0},"end":{"line":null,"column":-1}}},"77":{"name":"(anonymous_125)","line":297,"loc":{"start":{"line":297,"column":0},"end":{"line":null,"column":-1}}},"78":{"name":"(anonymous_126)","line":302,"loc":{"start":{"line":302,"column":0},"end":{"line":null,"column":-1}}},"79":{"name":"(anonymous_127)","line":303,"loc":{"start":{"line":303,"column":0},"end":{"line":null,"column":-1}}},"80":{"name":"(anonymous_128)","line":307,"loc":{"start":{"line":307,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":3,"column":0},"end":{"line":null,"column":-1}}]},"3":{"line":4,"type":"cond-expr","locations":[{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}}]},"4":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}}]},"5":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":5,"column":0},"end":{"line":null,"column":-1}}]},"6":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":26,"column":0},"end":{"line":null,"column":-1}}]},"7":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":30,"column":0},"end":{"line":null,"column":-1}}]},"8":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":36,"column":0},"end":{"line":null,"column":-1}}]},"9":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":37,"column":0},"end":{"line":null,"column":-1}}]},"10":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":44,"column":0},"end":{"line":null,"column":-1}}]},"11":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":46,"column":0},"end":{"line":null,"column":-1}}]},"12":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":50,"column":0},"end":{"line":null,"column":-1}}]},"13":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":60,"column":0},"end":{"line":63,"column":0}}]},"14":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":59,"column":0},"end":{"line":null,"column":-1}}]},"15":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":61,"column":0},"end":{"line":63,"column":0}}]},"16":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":63,"column":0},"end":{"line":null,"column":-1}}]},"17":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":81,"column":0},"end":{"line":null,"column":-1}}]},"18":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":82,"column":0},"end":{"line":null,"column":-1}}]},"19":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":126,"column":0},"end":{"line":null,"column":-1}}]},"20":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":203,"column":0},"end":{"line":209,"column":0}}]},"21":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":203,"column":0},"end":{"line":null,"column":-1}}]},"22":{"line":303,"type":"cond-expr","locations":[{"start":{"line":303,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":303,"column":0},"end":{"line":309,"column":0}}]},"23":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":303,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":26,"9":26,"10":0,"11":26,"12":0,"13":0,"14":26,"15":0,"16":26,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":26,"24":0,"25":0,"26":0,"27":26,"28":26,"29":0,"30":0,"31":0,"32":26,"33":0,"34":0,"35":0,"36":0,"37":26,"38":1,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":7,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":1,"122":0,"123":0,"124":0,"125":0,"126":1,"127":1,"128":0,"129":0,"130":0,"131":0,"132":1,"133":1,"134":0,"135":0,"136":0,"137":0,"138":1,"139":1,"140":7,"141":0,"142":0,"143":0,"144":0,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[26,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":1,"2":1,"3":26,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":7,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":7,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"code":"// https://d3js.org/d3-time/ Version 1.0.4. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","l":{"2":1,"3":1,"8":1,"9":1,"11":1,"13":1,"14":0,"17":26,"19":26,"20":0,"23":26,"24":0,"26":0,"29":26,"30":0,"33":26,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":26,"43":0,"44":0,"46":0,"50":26,"51":26,"52":0,"53":0,"54":0,"57":26,"58":0,"59":0,"62":0,"63":0,"67":26,"70":1,"73":0,"75":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"88":0,"92":1,"94":1,"95":1,"96":1,"97":1,"98":1,"100":1,"101":0,"103":0,"105":0,"107":0,"110":1,"112":1,"113":0,"115":0,"117":0,"119":0,"122":1,"124":1,"125":0,"126":0,"127":0,"129":0,"131":0,"133":0,"136":1,"138":1,"139":0,"141":0,"143":0,"145":0,"148":1,"150":1,"151":7,"152":0,"153":0,"155":0,"157":0,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":1,"178":0,"179":0,"181":0,"183":0,"185":0,"188":1,"190":1,"191":0,"192":0,"194":0,"196":0,"198":0,"202":1,"203":0,"204":0,"205":0,"206":0,"208":0,"212":1,"214":1,"215":0,"217":0,"219":0,"221":0,"224":1,"226":1,"227":0,"229":0,"231":0,"233":0,"236":1,"238":1,"239":0,"241":0,"243":0,"245":0,"248":1,"250":1,"251":7,"252":0,"253":0,"255":0,"257":0,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"277":1,"278":0,"279":0,"281":0,"283":0,"285":0,"288":1,"290":1,"291":0,"292":0,"294":0,"296":0,"298":0,"302":1,"303":0,"304":0,"305":0,"306":0,"308":0,"312":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"376":1}},
"src/BubbleSpiral.ts":{"path":"src/BubbleSpiral.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":68,"column":1}},"3":{"start":{"line":9,"column":37},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":18,"column":11},"end":{"line":20,"column":5}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},"7":{"start":{"line":27,"column":11},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":56}},"9":{"start":{"line":34,"column":11},"end":{"line":59,"column":5}},"10":{"start":{"line":34,"column":4},"end":{"line":59,"column":5}},"11":{"start":{"line":35,"column":8},"end":{"line":37,"column":52}},"12":{"start":{"line":39,"column":8},"end":{"line":40,"column":53}},"13":{"start":{"line":42,"column":8},"end":{"line":42,"column":38}},"14":{"start":{"line":44,"column":8},"end":{"line":47,"column":37}},"15":{"start":{"line":49,"column":8},"end":{"line":56,"column":41}},"16":{"start":{"line":50,"column":31},"end":{"line":50,"column":67}},"17":{"start":{"line":51,"column":31},"end":{"line":51,"column":67}},"18":{"start":{"line":52,"column":30},"end":{"line":52,"column":54}},"19":{"start":{"line":53,"column":51},"end":{"line":53,"column":68}},"20":{"start":{"line":53,"column":77},"end":{"line":53,"column":82}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":20}},"22":{"start":{"line":64,"column":11},"end":{"line":67,"column":5}},"23":{"start":{"line":65,"column":8},"end":{"line":65,"column":44}},"24":{"start":{"line":66,"column":8},"end":{"line":66,"column":33}},"25":{"start":{"line":68,"column":0},"end":{"line":68,"column":1}},"26":{"start":{"line":9,"column":13},"end":{"line":9,"column":25}}},"fnMap":{"1":{"name":"(anonymous_132)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"BubbleSpiral","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":58}}},"3":{"name":"(anonymous_134)","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}}},"4":{"name":"(anonymous_135)","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":32}}},"5":{"name":"(anonymous_136)","line":34,"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}}},"6":{"name":"(anonymous_137)","line":50,"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":26}}},"7":{"name":"(anonymous_138)","line":51,"loc":{"start":{"line":51,"column":24},"end":{"line":51,"column":26}}},"8":{"name":"(anonymous_139)","line":52,"loc":{"start":{"line":52,"column":23},"end":{"line":52,"column":25}}},"9":{"name":"(anonymous_140)","line":53,"loc":{"start":{"line":53,"column":44},"end":{"line":53,"column":46}}},"10":{"name":"(anonymous_141)","line":53,"loc":{"start":{"line":53,"column":71},"end":{"line":53,"column":76}}},"11":{"name":"(anonymous_142)","line":64,"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":27}}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},{"start":{"line":11,"column":22},"end":{"line":null,"column":-1}}]},"2":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":44},"end":{"line":53,"column":68}},{"start":{"line":53,"column":71},"end":{"line":53,"column":82}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":1,"26":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"code":"import { SpiralBase } from './SpiralBase';\nimport  * as d3 from 'd3';\n\n/**\n * Chart data using bubbles on  a spiral. Each entry in a table is visualised\n * as a bubble; size and color may be varied using the methods `radius_map`\n * and `color_map`.\n */\nexport class BubbleSpiral<T> extends SpiralBase<T> {\n    constructor (element: d3.Selection<any, any, any, any>) {\n        super(element);\n    }\n\n    /**\n     * Rescale the output of `weight_map` to create a decent size for the\n     * bubbles.\n     */\n    public bubble_scale_fn(x: number): number {\n        return x;\n    }\n\n    /**\n     * Scale the size of bubbles using this map. This defaults to using\n     * `weight_map` and scaling that using `bubble_scale_fn`. It is not\n     * recommended to change this function directly.\n     */\n    public bubble_scale_map(x: T): number {\n        return this.bubble_scale_fn(this.weight_map(x));\n    }\n\n    /**\n     * Render given data as bubbles.\n     */\n    public render(data: T[]): d3.Selection<any, any, any, any> {\n        const svg = this.element.append('svg')\n                    .attr('height', this.chartHeight)\n                    .attr('width', this.chartWidth);\n\n        const plot = svg.append('g')\n            .attr('transform', 'translate(400 300)');\n\n        this.render_spiral_axis(plot);\n\n        const bubble_groups = plot.append('g').selectAll('g.bubble')\n            .data(data)\n            .enter().append('g')\n            .attr('class', 'bubble');\n\n        bubble_groups.append('circle')\n            .attr('cx', (d) => this.get_polar(this.radial_map(d)).x)\n            .attr('cy', (d) => this.get_polar(this.radial_map(d)).y)\n            .attr('r', (d) => this.bubble_scale_map(d))\n            .style('fill', this.color_map ? (d) => this.color_map(d) : () => 'red')\n            .style('fill-opacity', 0.1)\n            .style('stroke', 'black')\n            .style('stroke-width', 0.05);\n\n        return plot;\n    }\n\n    /**\n     * Update the view. Currently clears the SVG and rerenders everything.\n     */\n    public update(data: T[]): d3.Selection<any, any, any, any> {\n        this.element.select('svg').remove();\n        return this.render(data);\n    }\n}\n","l":{"1":1,"9":1,"10":1,"18":1,"19":0,"27":1,"28":0,"34":1,"35":0,"39":0,"42":0,"44":0,"49":0,"50":0,"51":0,"52":0,"53":0,"58":0,"64":1,"65":0,"66":0,"68":1}},
"src/Complex.ts":{"path":"src/Complex.ts","statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":95,"column":1}},"2":{"start":{"line":25,"column":4},"end":{"line":28,"column":5}},"3":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"5":{"start":{"line":9,"column":11},"end":{"line":12,"column":5}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":43}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":71}},"8":{"start":{"line":18,"column":11},"end":{"line":20,"column":5}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":50}},"12":{"start":{"line":40,"column":11},"end":{"line":42,"column":5}},"13":{"start":{"line":41,"column":8},"end":{"line":41,"column":61}},"14":{"start":{"line":47,"column":11},"end":{"line":49,"column":5}},"15":{"start":{"line":48,"column":8},"end":{"line":48,"column":72}},"16":{"start":{"line":54,"column":11},"end":{"line":57,"column":5}},"17":{"start":{"line":55,"column":8},"end":{"line":55,"column":39}},"18":{"start":{"line":56,"column":8},"end":{"line":56,"column":58}},"19":{"start":{"line":64,"column":11},"end":{"line":69,"column":5}},"20":{"start":{"line":65,"column":8},"end":{"line":68,"column":10}},"21":{"start":{"line":74,"column":11},"end":{"line":76,"column":5}},"22":{"start":{"line":75,"column":8},"end":{"line":75,"column":57}},"23":{"start":{"line":81,"column":11},"end":{"line":85,"column":5}},"24":{"start":{"line":82,"column":8},"end":{"line":84,"column":10}},"25":{"start":{"line":90,"column":11},"end":{"line":94,"column":5}},"26":{"start":{"line":91,"column":8},"end":{"line":93,"column":10}},"27":{"start":{"line":95,"column":0},"end":{"line":95,"column":1}},"28":{"start":{"line":4,"column":13},"end":{"line":4,"column":20}}},"fnMap":{"1":{"name":"(anonymous_144)","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Complex","line":25,"loc":{"start":{"line":25,"column":4},"end":{"line":25,"column":43}}},"3":{"name":"(anonymous_146)","line":9,"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":25}}},"4":{"name":"(anonymous_147)","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}}},"5":{"name":"(anonymous_148)","line":33,"loc":{"start":{"line":33,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_149)","line":40,"loc":{"start":{"line":40,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_150)","line":47,"loc":{"start":{"line":47,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_151)","line":54,"loc":{"start":{"line":54,"column":4},"end":{"line":null,"column":-1}}},"9":{"name":"(anonymous_152)","line":64,"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":27}}},"10":{"name":"(anonymous_153)","line":74,"loc":{"start":{"line":74,"column":4},"end":{"line":74,"column":31}}},"11":{"name":"(anonymous_154)","line":81,"loc":{"start":{"line":81,"column":4},"end":{"line":81,"column":26}}},"12":{"name":"(anonymous_155)","line":90,"loc":{"start":{"line":90,"column":4},"end":{"line":90,"column":27}}}},"branchMap":{},"s":{"1":1,"2":1,"3":13834,"4":13834,"5":1,"6":0,"7":0,"8":1,"9":3076,"10":1,"11":512,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":1,"20":3073,"21":1,"22":256,"23":1,"24":3072,"25":1,"26":3072,"27":1,"28":1},"b":{},"f":{"1":1,"2":13834,"3":0,"4":3076,"5":512,"6":0,"7":0,"8":0,"9":3073,"10":256,"11":3072,"12":3072},"code":"/**\n * Complex number class\n */\nexport class Complex {\n    /**\n     * @param a complex number\n     * @returns exp(a + ib) -> exp(a) (cos(b) + i sin(b))\n     */\n    static EXP(a: Complex): Complex {\n        const s: number = Math.exp(a.real);\n        return new Complex(s * Math.cos(a.imag), s * Math.sin(a.imag));\n    }\n\n    /**\n     * @param a real number\n     * @returns exp(ia)\n     */\n    static EXPI(a: number): Complex {\n        return new Complex(Math.cos(a), Math.sin(a));\n    }\n\n    public real: number;\n    public imag: number;\n\n    constructor (real: number, imag: number) {\n        this.real = real;\n        this.imag = imag;\n    }\n\n    /**\n     * @returns the complex conjugate: (a + ib) -> (a - ib)\n     */\n    get conjugate(): Complex {\n        return new Complex(this.real, -this.imag);\n    }\n\n    /**\n     * @returns the square function: (a + ib) -> a^2 - b^2\n     */\n    public square(): number {\n        return this.real * this.real - this.imag * this.imag;\n    }\n\n    /**\n     * @returns the length square: (a + ib) -> a^2 + b^2\n     */\n    public norm2(): number {\n        return Math.sqrt(this.real * this.real + this.imag * this.imag);\n    }\n\n    /**\n     * @returns inverse number: x -> y such that x y == 1\n     */\n    public inverse(): Complex {\n        const s: number = this.norm2();\n        return new Complex(this.real / s, -this.imag / s);\n    }\n\n    /**\n     * @param a other complex number.\n     * @returns complex multiple: (a + ib) * (c + id)\n     *    -> (a c - b d + i(a d + b c))\n     */\n    public times(a: Complex): Complex {\n        return new Complex(\n            this.real * a.real - this.imag * a.imag,\n            this.imag * a.real + this.real * a.imag\n        );\n    }\n\n    /**\n     * @returns multiple by real number: (a + ib) c -> (a c + i b c)\n     */\n    public times_real(a: number): Complex {\n        return new Complex(this.real * a, this.imag * a);\n    }\n\n    /**\n     * @returns complex sum: (a + ib) + (c + id) -> (a+c + i(b+d))\n     */\n    public plus(a: Complex): Complex {\n        return new Complex(\n            this.real + a.real, this.imag + a.imag\n        );\n    }\n\n    /**\n     * @returns complex difference: (a + ib) - (c + id) -> (a-c + i(b-d))\n     */\n    public minus(a: Complex): Complex {\n        return new Complex(\n            this.real - a.real, this.imag - a.imag\n        );\n    }\n}\n","l":{"4":1,"9":1,"10":0,"11":0,"18":1,"19":3076,"25":1,"26":13834,"27":13834,"33":1,"34":512,"40":1,"41":0,"47":1,"48":0,"54":1,"55":0,"56":0,"64":1,"65":3073,"74":1,"75":256,"81":1,"82":3072,"90":1,"91":3072,"95":1}},
"src/LineChart.ts":{"path":"src/LineChart.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":57,"column":1}},"4":{"start":{"line":7,"column":31},"end":{"line":7,"column":48}},"5":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":65}},"7":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":70}},"9":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":71}},"11":{"start":{"line":22,"column":11},"end":{"line":56,"column":5}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":58}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":59}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":37}},"16":{"start":{"line":28,"column":8},"end":{"line":32,"column":94}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"18":{"start":{"line":34,"column":38},"end":{"line":34,"column":41}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":44}},"20":{"start":{"line":35,"column":38},"end":{"line":35,"column":41}},"21":{"start":{"line":37,"column":8},"end":{"line":39,"column":28}},"22":{"start":{"line":38,"column":20},"end":{"line":38,"column":26}},"23":{"start":{"line":39,"column":20},"end":{"line":39,"column":26}},"24":{"start":{"line":41,"column":8},"end":{"line":44,"column":25}},"25":{"start":{"line":46,"column":8},"end":{"line":48,"column":25}},"26":{"start":{"line":50,"column":8},"end":{"line":53,"column":29}},"27":{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},"28":{"start":{"line":57,"column":0},"end":{"line":57,"column":1}},"29":{"start":{"line":7,"column":13},"end":{"line":7,"column":22}}},"fnMap":{"1":{"name":"(anonymous_160)","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"LineChart","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":58}}},"3":{"name":"(anonymous_162)","line":15,"loc":{"start":{"line":15,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_163)","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_164)","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}}},"6":{"name":"(anonymous_165)","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":34}}},"7":{"name":"(anonymous_166)","line":35,"loc":{"start":{"line":35,"column":33},"end":{"line":35,"column":34}}},"8":{"name":"(anonymous_167)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":16}}},"9":{"name":"(anonymous_168)","line":39,"loc":{"start":{"line":39,"column":15},"end":{"line":39,"column":16}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},{"start":{"line":11,"column":22},"end":{"line":13,"column":4}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1},"b":{"1":[1,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"code":"import * as d3 from 'd3';\n\nimport { Base }        from './basechart';\nimport { ICoordinate } from './basechart';\nimport { IMargin }     from './basechart';\n\nexport class LineChart extends Base<ICoordinate> {\n    public margin: IMargin;\n\n    constructor (element: d3.Selection<any, any, any, any>) {\n        super(element);\n        this.margin = {top: 20, right: 20, bottom: 30, left: 50};\n    }\n\n    public get width(): number {\n        return this.chartWidth - this.margin.left - this.margin.right;\n    }\n    public get height(): number {\n        return this.chartHeight - this.margin.top - this.margin.bottom;\n    }\n\n    public render(data: ICoordinate[]): d3.Selection<any, any, any, any> {\n        const x = d3.scaleLinear().range([0, this.width]);\n        const y = d3.scaleLinear().range([this.height, 0]);\n        const xAxis = d3.axisBottom(x);\n        const yAxis = d3.axisLeft(y);\n\n        const svg = this.element.append('svg')\n            .attr('width', this.chartWidth)\n            .attr('height', this.chartHeight)\n            .append('g')\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n        x.domain(d3.extent(data, a => a.x));\n        y.domain(d3.extent(data, a => a.y));\n\n        const line = d3.line<ICoordinate>()\n            .x(a => x(a.x))\n            .y(a => y(a.y));\n\n        svg.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxis);\n\n        svg.append('g')\n            .attr('class', 'y axis')\n            .call(yAxis);\n\n        svg.append('path')\n            .datum(data)\n            .attr('class', 'line')\n            .attr('d', line);\n\n        return svg;\n    }\n}\n","l":{"1":1,"3":1,"7":1,"10":1,"12":0,"15":1,"16":0,"18":1,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"28":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"46":0,"50":0,"55":0,"57":1}},
"src/LineSpiral.ts":{"path":"src/LineSpiral.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"4":{"start":{"line":14,"column":0},"end":{"line":89,"column":1}},"5":{"start":{"line":14,"column":35},"end":{"line":14,"column":48}},"6":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":29}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":53}},"9":{"start":{"line":19,"column":12},"end":{"line":19,"column":53}},"10":{"start":{"line":20,"column":12},"end":{"line":20,"column":52}},"11":{"start":{"line":29,"column":4},"end":{"line":40,"column":5}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":54}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":47}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":44}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":66}},"17":{"start":{"line":35,"column":59},"end":{"line":35,"column":63}},"18":{"start":{"line":36,"column":8},"end":{"line":36,"column":66}},"19":{"start":{"line":36,"column":59},"end":{"line":36,"column":63}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":83}},"21":{"start":{"line":37,"column":58},"end":{"line":37,"column":80}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":52}},"23":{"start":{"line":42,"column":11},"end":{"line":82,"column":5}},"24":{"start":{"line":42,"column":4},"end":{"line":82,"column":5}},"25":{"start":{"line":43,"column":8},"end":{"line":45,"column":52}},"26":{"start":{"line":47,"column":8},"end":{"line":48,"column":53}},"27":{"start":{"line":52,"column":8},"end":{"line":53,"column":81}},"28":{"start":{"line":53,"column":17},"end":{"line":53,"column":79}},"29":{"start":{"line":55,"column":8},"end":{"line":57,"column":25}},"30":{"start":{"line":56,"column":20},"end":{"line":56,"column":23}},"31":{"start":{"line":57,"column":20},"end":{"line":57,"column":23}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":26}},"33":{"start":{"line":60,"column":8},"end":{"line":60,"column":32}},"34":{"start":{"line":63,"column":8},"end":{"line":63,"column":47}},"35":{"start":{"line":64,"column":8},"end":{"line":79,"column":9}},"36":{"start":{"line":65,"column":12},"end":{"line":66,"column":54}},"37":{"start":{"line":67,"column":12},"end":{"line":68,"column":68}},"38":{"start":{"line":68,"column":21},"end":{"line":68,"column":66}},"39":{"start":{"line":69,"column":12},"end":{"line":71,"column":27}},"40":{"start":{"line":70,"column":21},"end":{"line":70,"column":68}},"41":{"start":{"line":73,"column":12},"end":{"line":78,"column":44}},"42":{"start":{"line":81,"column":8},"end":{"line":81,"column":20}},"43":{"start":{"line":84,"column":11},"end":{"line":88,"column":5}},"44":{"start":{"line":85,"column":8},"end":{"line":85,"column":44}},"45":{"start":{"line":86,"column":8},"end":{"line":86,"column":25}},"46":{"start":{"line":87,"column":8},"end":{"line":87,"column":29}},"47":{"start":{"line":89,"column":0},"end":{"line":89,"column":1}},"48":{"start":{"line":14,"column":13},"end":{"line":14,"column":23}}},"fnMap":{"1":{"name":"(anonymous_173)","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"LineSpiral","line":25,"loc":{"start":{"line":25,"column":4},"end":{"line":25,"column":58}}},"3":{"name":"(anonymous_175)","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":29}}},"4":{"name":"(anonymous_176)","line":35,"loc":{"start":{"line":35,"column":54},"end":{"line":35,"column":55}}},"5":{"name":"(anonymous_177)","line":36,"loc":{"start":{"line":36,"column":54},"end":{"line":36,"column":55}}},"6":{"name":"(anonymous_178)","line":37,"loc":{"start":{"line":37,"column":53},"end":{"line":37,"column":54}}},"7":{"name":"(anonymous_179)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":null,"column":-1}}},"8":{"name":"(anonymous_180)","line":53,"loc":{"start":{"line":53,"column":12},"end":{"line":53,"column":13}}},"9":{"name":"(anonymous_181)","line":56,"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":16}}},"10":{"name":"(anonymous_182)","line":57,"loc":{"start":{"line":57,"column":15},"end":{"line":57,"column":16}}},"11":{"name":"(anonymous_183)","line":68,"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":17}}},"12":{"name":"(anonymous_184)","line":70,"loc":{"start":{"line":70,"column":16},"end":{"line":70,"column":17}}},"13":{"name":"(anonymous_185)","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":27}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":22}},{"start":{"line":26,"column":22},"end":{"line":27,"column":4}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":1,"48":1},"b":{"1":[1,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"code":"import * as d3 from 'd3';\nimport * as d3Array from 'd3-array';\nimport { Polar }            from './basechart';\nimport { SpiralBase }       from './SpiralBase';\n\n// (used to be in spiral.ts, module Chart)\n\n/**\n * Charts data table as a filled curve on a spiral. We first create a histogram\n * of the data items, then plot the histogram as the thickness of a line (or\n * (filled curve). The number of points in the histogram is currently set by the\n * private member `n_points`.\n */\nexport class LineSpiral<T> extends SpiralBase<T> {\n    private hist_data: d3Array.Bin<T, number>[];\n    private hist_fn: d3Array.HistogramGenerator<T, number>;\n    private n_points = 10000;\n    private hist_x0 = d3.scaleLinear().range([0, 1]);\n    private hist_x1 = d3.scaleLinear().range([0, 1]);\n    private hist_y = d3.scaleLinear().range([0, 1]);\n    //private hist_fn : any;\n\n    public radial_map: any;\n\n    constructor (element: d3.Selection<any, any, any, any>) {\n        super(element);\n    }\n\n    public set data(data: T[]) {\n        this.hist_fn = d3Array.histogram<T, number>();\n        this.hist_fn.thresholds(this.n_points);\n        this.hist_fn.value(this.radial_map);\n\n        this.hist_data = this.hist_fn(data);\n        this.hist_x0.domain(d3.extent(this.hist_data, a => a.x0));\n        this.hist_x1.domain(d3.extent(this.hist_data, a => a.x1));\n        this.hist_y.domain(d3.extent(this.hist_data, a => a.length / data.length));\n\n        console.log('LineSpriral: data:: 38', data);\n    }\n\n    public render(): d3.Selection<any, any, any, any> {\n        const svg = this.element.append('svg')\n                    .attr('height', this.chartHeight)\n                    .attr('width', this.chartWidth);\n\n        const plot = svg.append('g')\n            .attr('transform', 'translate(400 300)');\n\n        // this.render_spiral_axis(plot);\n\n        const polar_data = this.hist_data.slice(1).map<[Polar, number]>(\n            a => [this.get_polar(a.x0 + a.x1 / 2), a.length / this.data.length]);\n\n        const line = d3.line<Polar>()\n            .x(a => a.x)\n            .y(a => a.y);\n\n        console.log(line);\n        console.log(polar_data);\n\n        // chop the graph in many pieces\n        const piece_size = this.n_points / 256;\n        for (let i = 0; i < 256; i += 1) {\n            const piece = polar_data.slice(\n                piece_size * i, piece_size * (i + 1));\n            const top_part = piece.map(\n                a => a[0].inc_r(a[1] * (this.period_fraction * 3)));\n            const bottom_part = piece.map(\n                a => a[0].inc_r(- a[1] * (this.period_fraction * 3)))\n                .reverse();\n\n            plot.append('path')\n                .datum(top_part.concat(bottom_part))\n                .attr('class', 'blob')\n                .attr('d', line)\n                .style('fill', 'blue')\n                .style('fill-opacity', 0.7);\n        }\n\n        return plot;\n    }\n\n    public update(data: T[]): d3.Selection<any, any, any, any> {\n        this.element.select('svg').remove();\n        this.data = data;\n        return this.render();\n    }\n}\n","l":{"1":1,"2":1,"4":1,"14":1,"17":0,"18":0,"19":0,"20":0,"25":1,"29":1,"30":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"39":0,"42":1,"43":0,"47":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0,"60":0,"63":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"73":0,"81":0,"84":1,"85":0,"86":0,"87":0,"89":1}},
"src/SpiralBase.ts":{"path":"src/SpiralBase.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"4":{"start":{"line":16,"column":0},"end":{"line":153,"column":1}},"5":{"start":{"line":16,"column":35},"end":{"line":16,"column":42}},"6":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"7":{"start":{"line":52,"column":11},"end":{"line":52,"column":46}},"8":{"start":{"line":78,"column":8},"end":{"line":78,"column":52}},"9":{"start":{"line":58,"column":12},"end":{"line":61,"column":5}},"10":{"start":{"line":59,"column":8},"end":{"line":60,"column":61}},"11":{"start":{"line":68,"column":11},"end":{"line":74,"column":5}},"12":{"start":{"line":69,"column":8},"end":{"line":73,"column":9}},"13":{"start":{"line":70,"column":12},"end":{"line":70,"column":25}},"14":{"start":{"line":72,"column":12},"end":{"line":72,"column":31}},"15":{"start":{"line":84,"column":11},"end":{"line":86,"column":5}},"16":{"start":{"line":85,"column":8},"end":{"line":85,"column":18}},"17":{"start":{"line":91,"column":11},"end":{"line":94,"column":5}},"18":{"start":{"line":92,"column":8},"end":{"line":93,"column":46}},"19":{"start":{"line":99,"column":11},"end":{"line":122,"column":5}},"20":{"start":{"line":99,"column":4},"end":{"line":122,"column":5}},"21":{"start":{"line":101,"column":8},"end":{"line":102,"column":49}},"22":{"start":{"line":102,"column":23},"end":{"line":102,"column":47}},"23":{"start":{"line":104,"column":8},"end":{"line":105,"column":35}},"24":{"start":{"line":107,"column":8},"end":{"line":109,"column":27}},"25":{"start":{"line":108,"column":22},"end":{"line":108,"column":25}},"26":{"start":{"line":109,"column":22},"end":{"line":109,"column":25}},"27":{"start":{"line":113,"column":8},"end":{"line":119,"column":40}},"28":{"start":{"line":121,"column":8},"end":{"line":121,"column":21}},"29":{"start":{"line":127,"column":11},"end":{"line":152,"column":5}},"30":{"start":{"line":127,"column":4},"end":{"line":152,"column":5}},"31":{"start":{"line":130,"column":8},"end":{"line":130,"column":72}},"32":{"start":{"line":130,"column":34},"end":{"line":130,"column":71}},"33":{"start":{"line":131,"column":8},"end":{"line":131,"column":70}},"34":{"start":{"line":131,"column":32},"end":{"line":131,"column":69}},"35":{"start":{"line":133,"column":8},"end":{"line":133,"column":66}},"36":{"start":{"line":135,"column":8},"end":{"line":136,"column":67}},"37":{"start":{"line":138,"column":8},"end":{"line":142,"column":40}},"38":{"start":{"line":139,"column":31},"end":{"line":139,"column":41}},"39":{"start":{"line":139,"column":61},"end":{"line":139,"column":71}},"40":{"start":{"line":140,"column":31},"end":{"line":140,"column":39}},"41":{"start":{"line":140,"column":59},"end":{"line":140,"column":67}},"42":{"start":{"line":144,"column":8},"end":{"line":149,"column":36}},"43":{"start":{"line":145,"column":30},"end":{"line":145,"column":48}},"44":{"start":{"line":146,"column":30},"end":{"line":146,"column":48}},"45":{"start":{"line":148,"column":28},"end":{"line":148,"column":36}},"46":{"start":{"line":151,"column":8},"end":{"line":151,"column":21}},"47":{"start":{"line":153,"column":0},"end":{"line":153,"column":1}},"48":{"start":{"line":16,"column":13},"end":{"line":16,"column":23}}},"fnMap":{"1":{"name":"(anonymous_190)","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"SpiralBase","line":76,"loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":58}}},"3":{"name":"(anonymous_192)","line":58,"loc":{"start":{"line":58,"column":4},"end":{"line":58,"column":33}}},"4":{"name":"(anonymous_193)","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":38}}},"5":{"name":"(anonymous_194)","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":25}}},"6":{"name":"(anonymous_195)","line":91,"loc":{"start":{"line":91,"column":4},"end":{"line":91,"column":30}}},"7":{"name":"(anonymous_196)","line":99,"loc":{"start":{"line":99,"column":4},"end":{"line":100,"column":50}}},"8":{"name":"(anonymous_197)","line":102,"loc":{"start":{"line":102,"column":16},"end":{"line":102,"column":18}}},"9":{"name":"(anonymous_198)","line":108,"loc":{"start":{"line":108,"column":15},"end":{"line":108,"column":17}}},"10":{"name":"(anonymous_199)","line":109,"loc":{"start":{"line":109,"column":15},"end":{"line":109,"column":17}}},"11":{"name":"(anonymous_200)","line":127,"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":44}}},"12":{"name":"(anonymous_201)","line":130,"loc":{"start":{"line":130,"column":22},"end":{"line":130,"column":29}}},"13":{"name":"(anonymous_202)","line":131,"loc":{"start":{"line":131,"column":20},"end":{"line":131,"column":27}}},"14":{"name":"(anonymous_203)","line":139,"loc":{"start":{"line":139,"column":24},"end":{"line":139,"column":26}}},"15":{"name":"(anonymous_204)","line":139,"loc":{"start":{"line":139,"column":54},"end":{"line":139,"column":56}}},"16":{"name":"(anonymous_205)","line":140,"loc":{"start":{"line":140,"column":24},"end":{"line":140,"column":26}}},"17":{"name":"(anonymous_206)","line":140,"loc":{"start":{"line":140,"column":52},"end":{"line":140,"column":54}}},"18":{"name":"(anonymous_207)","line":145,"loc":{"start":{"line":145,"column":23},"end":{"line":145,"column":25}}},"19":{"name":"(anonymous_208)","line":146,"loc":{"start":{"line":146,"column":23},"end":{"line":146,"column":25}}},"20":{"name":"(anonymous_209)","line":148,"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":23}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":22}},{"start":{"line":77,"column":22},"end":{"line":79,"column":4}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":7}},{"start":{"line":69,"column":8},"end":{"line":69,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"code":"import * as d3 from 'd3';\n\nimport { Base }        from './basechart';\nimport { Polar }       from './basechart';\nimport { ICoordinate } from './basechart';\n\n// (used to be in spiral.ts, module Chart)\n\n/**\n * This is the base class to other charts on a spiral. It gives a low level\n * interface on top of which we can implement several type of spiral charts.\n *\n * Several members have the `_map` suffix. This means that these members are\n * functions that map a data element to some value used in plotting the spiral.\n */\nexport class SpiralBase<T> extends Base<T> {\n    /**\n     * Maps a data element to a number in the range [0, 1]. The returned number\n     * then indicates the place on the spiral that the data element should be\n     * given. Such a map can be created using `d3.scale`, setting the range\n     * to [0, 1] and the domain to the domain of your data.\n     */\n    public radial_map: (x: T) => number;\n\n    /**\n     * A multiplier for the output of `radial_map`. This determines the scale\n     * at which the spiral is being plotted. It defaults to\n     * `this.chartHeight * 0.45`.\n     */\n    public radial_scale: number;\n\n    /**\n     * The fraction of one turn against the entire range. This is one over the\n     * number of windings in the spiral. Suppose you have a spiral mapping a\n     * time range of a few months and want to study periodicity over one day,\n     * then `period_fraction` should be set to one day over the entire time\n     * domain.\n     */\n    public period_fraction: number;\n\n    /**\n     * Get the weight of a data element. This weight will function as indication\n     * of radius in the `BubbleSpiral`, but can also be leveraged as a weight\n     * when generating a histogram for the `LineSpiral` and `ArcSpiral` charts.\n     */\n    public weight_map: (x: T) => number;\n\n    /**\n     * Get the color by which a data element is plotted. This is currently only\n     * used in the `BubbleSpiral`.\n     */\n    public color_map: (x: T) => string = null;\n\n    /**\n     * (private) Computes the angle at which a point is plotted, given the\n     * output of `radial_map`.\n     */\n    private angular_map(x: number) {\n        return SpiralBase.MODULO(x, this.period_fraction) /\n            this.period_fraction * 2 * Math.PI - Math.PI / 2;\n    }\n\n    public line_tics: any;\n\n    /**\n     * Computes `x` modulo `y` correctly, also for negative numbers.\n     */\n    static MODULO(x: number, y: number): number {\n        if (x >= 0) {\n            return x % y;\n        } else {\n            return y - (x % y);\n        }\n    }\n\n    constructor (element: d3.Selection<any, any, any, any>) {\n        super(element);\n        this.radial_scale = this.chartHeight * 0.45;\n    }\n\n    /**\n     * Get a label given a data element; used for labeling tics.\n     */\n    public label_map(_: T): string {\n        return '';\n    }\n\n    /**\n     * Return polar coordinates on the plot given a number in the range [0, 1].\n     */\n    public get_polar(d: number): Polar {\n        return new Polar((d * 0.8 + 0.15) * this.radial_scale,\n                         this.angular_map(d));\n    }\n\n    /**\n     * Render the line on top of which the data points should be plotted.\n     */\n    public render_spiral_axis(\n            plot: d3.Selection<any, any, any, any>) {\n        const pts: ICoordinate[] = d3.range(1000).map(\n                (i) => this.get_polar(i / 1000));\n\n        const group = plot.append('g')\n            .attr('class', 'axis');\n\n        const line = d3.line<ICoordinate>()\n            .x((d) => d.x)\n            .y((d) => d.y);\n// FIX ME: add interpolation\n//            .interpolate('basis');\n\n        group.append('path')\n            .datum(pts)\n            .attr('class', 'line')\n            .attr('d', line)\n            .style('fill', 'none')\n            .style('stroke', '#000')\n            .style('stroke-width', 0.5);\n\n        return group;\n    }\n\n    /**\n     * Draw an axis at a certain angle (radians), with a given label.\n     */\n    public add_axis(\n            selection: d3.Selection<any, any, any, any>,\n            angle: number[], label: string[]) {\n        const start = (a: any) => new Polar(0.2 * this.radial_scale, a);\n        const end = (a: any) => new Polar(1.0 * this.radial_scale, a);\n\n        const group = selection.append('g').attr('class', 'axes');\n\n        const axes = group.selectAll('g.axis')\n            .data(angle).enter().append('g').attr('class', 'axis');\n\n        axes.append('line')\n            .attr('x1', (d) => start(d).x).attr('y1', (d) => start(d).y)\n            .attr('x2', (d) => end(d).x).attr('y2', (d) => end(d).y)\n            .style('stroke', 'black')\n            .style('stroke-width', 0.5);\n\n        axes.append('text')\n            .attr('x', (d) => end(d).inc_r(15).x)\n            .attr('y', (d) => end(d).inc_r(15).y)\n            .attr('text-anchor', 'middle').attr('dy', 5)\n            .text((_, i) => label[i])\n            .style('font-size', 16);\n\n        return group;\n    }\n}\n","l":{"1":1,"3":1,"4":1,"16":1,"52":0,"58":1,"59":0,"68":1,"69":0,"70":0,"72":0,"76":1,"78":0,"84":1,"85":0,"91":1,"92":0,"99":1,"101":0,"102":0,"104":0,"107":0,"108":0,"109":0,"113":0,"121":0,"127":1,"130":0,"131":0,"133":0,"135":0,"138":0,"139":0,"140":0,"144":0,"145":0,"146":0,"148":0,"151":0,"153":1}},
"src/TimedBubbleSpiral.ts":{"path":"src/TimedBubbleSpiral.ts","statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":57,"column":1}},"5":{"start":{"line":9,"column":42},"end":{"line":9,"column":69}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"7":{"start":{"line":12,"column":11},"end":{"line":18,"column":6}},"8":{"start":{"line":13,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":27}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":25}},"11":{"start":{"line":24,"column":11},"end":{"line":26,"column":6}},"12":{"start":{"line":25,"column":8},"end":{"line":25,"column":39}},"13":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":28}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":25}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":47}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":66}},"18":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":47}},"20":{"start":{"line":41,"column":8},"end":{"line":41,"column":53}},"21":{"start":{"line":42,"column":8},"end":{"line":42,"column":51}},"22":{"start":{"line":45,"column":11},"end":{"line":47,"column":5}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":37}},"24":{"start":{"line":49,"column":11},"end":{"line":56,"column":5}},"25":{"start":{"line":50,"column":8},"end":{"line":50,"column":36}},"26":{"start":{"line":51,"column":8},"end":{"line":54,"column":68}},"27":{"start":{"line":53,"column":41},"end":{"line":53,"column":70}},"28":{"start":{"line":54,"column":41},"end":{"line":54,"column":65}},"29":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"30":{"start":{"line":57,"column":0},"end":{"line":57,"column":1}},"31":{"start":{"line":9,"column":13},"end":{"line":9,"column":30}}},"fnMap":{"1":{"name":"(anonymous_213)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"TimedBubbleSpiral","line":20,"loc":{"start":{"line":20,"column":4},"end":{"line":20,"column":58}}},"3":{"name":"(anonymous_215)","line":12,"loc":{"start":{"line":12,"column":23},"end":{"line":12,"column":42}}},"4":{"name":"(anonymous_216)","line":24,"loc":{"start":{"line":24,"column":24},"end":{"line":24,"column":43}}},"5":{"name":"(anonymous_217)","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_218)","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":37}}},"7":{"name":"(anonymous_219)","line":39,"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":32}}},"8":{"name":"(anonymous_220)","line":45,"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":39}}},"9":{"name":"(anonymous_221)","line":49,"loc":{"start":{"line":49,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_222)","line":53,"loc":{"start":{"line":53,"column":34},"end":{"line":53,"column":36}}},"11":{"name":"(anonymous_223)","line":54,"loc":{"start":{"line":54,"column":34},"end":{"line":54,"column":36}}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":22}},{"start":{"line":21,"column":22},"end":{"line":22,"column":4}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":7}},{"start":{"line":13,"column":8},"end":{"line":13,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"code":"//import * as d3 from 'd3';\nimport * as d3Time from 'd3-time';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Array from 'd3-array';\n\nimport { ITimedRecord } from './ITimedRecord';\nimport { LineSpiral } from './LineSpiral';\n\nexport class TimedBubbleSpiral<T> extends LineSpiral<ITimedRecord<T>> {\n    private _period: d3Time.TimeInterval;\n    public time_scale: d3Scale.ScaleTime<number, number>;\n    public color_map = (d: ITimedRecord<T>) => {\n        if (d.color) {\n            return d.color;\n        } else {\n            return 'red';\n        }\n    };\n\n    constructor (element: d3.Selection<any, any, any, any>) {\n        super(element);\n    }\n\n    public radial_map = (x: ITimedRecord<T>) => {\n        return this.time_scale(x.date);\n    };\n\n    set period(p: d3Time.TimeInterval) {\n        this._period = p;\n\n        const zero = this.time_scale.invert(0);\n        this.period_fraction = this.time_scale(p.offset(zero, 1));\n    }\n\n    get period(): d3Time.TimeInterval {\n        return this._period;\n    }\n\n    set period_seconds(p: number) {\n        const zero = this.time_scale.invert(0);\n        const iv = d3Time.timeSecond.offset(zero, p);\n        this.period_fraction = this.time_scale(iv);\n    }\n\n    public label_map(d: ITimedRecord<T>): string {\n        return d.date.toDateString();\n    }\n\n    public render(): d3.Selection<any, any, any, any> {\n        const plot = super.render();\n        this.add_axis(\n            plot,\n            d3Array.range(16).map((i) => i / 8 * Math.PI - Math.PI / 2),\n            d3Array.range(16).map((i) => (i / 8).toString() + 'π'));\n        return plot;\n    }\n}\n","l":{"2":1,"4":1,"7":1,"9":1,"12":0,"13":0,"14":0,"16":0,"20":1,"24":0,"25":0,"28":1,"29":0,"31":0,"32":0,"36":0,"39":1,"40":0,"41":0,"42":0,"45":1,"46":0,"49":1,"50":0,"51":0,"53":0,"54":0,"55":0,"57":1}},
"src/basechart.ts":{"path":"src/basechart.ts","statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":19}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":1}},"6":{"start":{"line":8,"column":13},"end":{"line":8,"column":22}},"7":{"start":{"line":18,"column":0},"end":{"line":33,"column":1}},"8":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":19}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":23}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":51}},"12":{"start":{"line":27,"column":14},"end":{"line":27,"column":49}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}},"14":{"start":{"line":28,"column":14},"end":{"line":28,"column":49}},"15":{"start":{"line":30,"column":11},"end":{"line":32,"column":5}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":1}},"18":{"start":{"line":18,"column":13},"end":{"line":18,"column":18}},"19":{"start":{"line":42,"column":0},"end":{"line":54,"column":1}},"20":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"21":{"start":{"line":43,"column":11},"end":{"line":43,"column":28}},"22":{"start":{"line":44,"column":11},"end":{"line":44,"column":29}},"23":{"start":{"line":48,"column":8},"end":{"line":48,"column":31}},"24":{"start":{"line":51,"column":11},"end":{"line":53,"column":5}},"25":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"26":{"start":{"line":54,"column":0},"end":{"line":54,"column":1}},"27":{"start":{"line":42,"column":22},"end":{"line":42,"column":26}}},"fnMap":{"1":{"name":"(anonymous_225)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Cartesian","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":36}}},"3":{"name":"(anonymous_227)","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"Polar","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}}},"5":{"name":"(anonymous_229)","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":13}}},"6":{"name":"(anonymous_230)","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}}},"7":{"name":"(anonymous_231)","line":30,"loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}}},"8":{"name":"(anonymous_232)","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"Base","line":47,"loc":{"start":{"line":47,"column":4},"end":{"line":47,"column":58}}},"10":{"name":"(anonymous_234)","line":51,"loc":{"start":{"line":51,"column":4},"end":{"line":51,"column":24}}}},"branchMap":{},"s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":1},"b":{},"f":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0},"code":"import * as d3 from 'd3';\n\nexport interface ICoordinate {\n    x: number;\n    y: number;\n}\n\nexport class Cartesian implements ICoordinate {\n    public x: number;\n    public y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Polar implements ICoordinate {\n    public r: number;\n    public phi: number;\n\n    constructor (r: number, phi: number) {\n        this.r = r;\n        this.phi = phi;\n    }\n\n    get x() { return this.r * Math.cos(this.phi); }\n    get y() { return this.r * Math.sin(this.phi); }\n\n    public inc_r(dr: number): Polar {\n        return new Polar(this.r + dr, this.phi);\n    }\n}\n\nexport interface IMargin {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n}\n\nexport abstract class Base<T> {\n    public chartWidth = 800;\n    public chartHeight = 600;\n    public element: d3.Selection<any, any, any, any>;\n\n    constructor (element: d3.Selection<any, any, any, any>) {\n        this.element = element;\n    }\n\n    public render(_: T[]): d3.Selection<any, any, any, any> {\n        return null;\n    }\n}\n","l":{"8":1,"12":1,"13":0,"14":0,"16":1,"18":1,"22":1,"23":0,"24":0,"27":1,"28":1,"30":1,"31":0,"33":1,"42":1,"43":0,"44":0,"47":1,"48":0,"51":1,"52":0,"54":1}},
"src/fourier.ts":{"path":"src/fourier.ts","statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"2":{"start":{"line":24,"column":0},"end":{"line":53,"column":1}},"3":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":35}},"5":{"start":{"line":27,"column":19},"end":{"line":27,"column":33}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":83}},"7":{"start":{"line":29,"column":23},"end":{"line":29,"column":81}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":28}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":21}},"10":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":24}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":21}},"13":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"14":{"start":{"line":39,"column":8},"end":{"line":39,"column":28}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":21}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":17}},"18":{"start":{"line":45,"column":4},"end":{"line":50,"column":5}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":54}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":34}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":37}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":38}},"23":{"start":{"line":52,"column":4},"end":{"line":52,"column":13}},"24":{"start":{"line":61,"column":0},"end":{"line":64,"column":1}},"25":{"start":{"line":62,"column":4},"end":{"line":62,"column":43}},"26":{"start":{"line":62,"column":29},"end":{"line":62,"column":40}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":62}},"28":{"start":{"line":63,"column":22},"end":{"line":63,"column":60}}},"fnMap":{"1":{"name":"fft","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":32}}},"2":{"name":"ifft","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":33}}},"3":{"name":"(anonymous_238)","line":62,"loc":{"start":{"line":62,"column":24},"end":{"line":62,"column":25}}},"4":{"name":"(anonymous_239)","line":63,"loc":{"start":{"line":63,"column":17},"end":{"line":63,"column":18}}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":3}},{"start":{"line":27,"column":4},"end":{"line":27,"column":3}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":3}},{"start":{"line":29,"column":4},"end":{"line":29,"column":3}}]}},"s":{"1":1,"2":2,"3":1533,"4":1533,"5":768,"6":765,"7":0,"8":765,"9":765,"10":765,"11":3072,"12":765,"13":765,"14":3072,"15":765,"16":765,"17":765,"18":765,"19":3072,"20":3072,"21":3072,"22":3072,"23":765,"24":2,"25":1,"26":256,"27":1,"28":256},"b":{"1":[768,765],"2":[0,765]},"f":{"1":1533,"2":1,"3":256,"4":256},"code":"/** The RFFT or Rather Fast Fourier Transform.\n *\n * This module has the forward as well as inverse transform. See\n * https://en.wikipedia.org/wiki/Discrete_Fourier_transform for more information\n * on the discrete Fourier transform.\n * To answer the question on everyone's mind: the inverse transform is\n * normalised such that it returns the original series (barring round-off\n * errors).\n */\n\n/**\n * class Complex\n */\nimport { Complex } from './Complex';\n\n/**\n * Forward Fourier transform (1d). This uses the Cooley–Tukey algorithm\n * in a recursive fashion. This is not an optimal implementation, but it\n * is fast enough for our purposes.\n *\n * @param s list of complex numbers.\n * @returns discrete Fourier sum of the series.\n */\nexport function fft(s: Complex[]): Complex[] {\n    const N: number = s.length;\n\n    if (N === 1) { return [s[0]]; }\n\n    if (N % 2 !== 0) { throw new Error('FFT: Size of array must be power of 2.'); }\n\n    const r: Complex[] = [];\n    r.length = N / 2;\n    for (let j = 0; j < N / 2; j += 1) {\n        r[j] = s[j * 2];\n    }\n    const p = fft(r);\n\n    for (let j = 0; j < N / 2; j += 1) {\n        r[j] = s[j * 2 + 1];\n    }\n    const q = fft(r);\n\n    const y: Complex[] = [];\n    y.length = N;\n    for (let k = 0; k < N / 2; k += 1) {\n        const wk = Complex.EXPI(-2 * k * Math.PI / N);\n        const qk = wk.times(q[k]);\n        y[k]         = p[k].plus(qk);\n        y[k + N / 2] = p[k].minus(qk);\n    }\n\n    return y;\n}\n\n/**\n * Inverse Fourier transform\n *\n * @param s list of complex numbers\n * @returns the inverse discrete Fourier sum of the series.\n */\nexport function ifft(s: Complex[]): Complex[] {\n    const y = fft(s.map(z => z.conjugate));\n    return y.map(z => z.conjugate.times_real(1.0 / s.length));\n}\n","l":{"14":1,"24":2,"25":1533,"27":1533,"29":765,"31":765,"32":765,"33":765,"34":3072,"36":765,"38":765,"39":3072,"41":765,"43":765,"44":765,"45":765,"46":3072,"47":3072,"48":3072,"49":3072,"52":765,"61":2,"62":256,"63":256}},
"src/index.ts":{"path":"src/index.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"2":{"start":{"line":1,"column":9},"end":{"line":1,"column":16}},"3":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"4":{"start":{"line":2,"column":9},"end":{"line":2,"column":12}},"5":{"start":{"line":2,"column":14},"end":{"line":2,"column":18}},"6":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"7":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"8":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"9":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"10":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"11":{"start":{"line":5,"column":9},"end":{"line":5,"column":19}},"12":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"13":{"start":{"line":6,"column":9},"end":{"line":6,"column":19}},"14":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"15":{"start":{"line":7,"column":9},"end":{"line":7,"column":26}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{},"f":{},"code":"export { Complex }           from './Complex';\nexport { fft, ifft }         from './fourier';\nexport { BubbleSpiral }      from './BubbleSpiral';\nexport { LineChart }         from './LineChart';\nexport { LineSpiral }        from './LineSpiral';\nexport { SpiralBase }        from './SpiralBase';\nexport { TimedBubbleSpiral } from './TimedBubbleSpiral';\n","l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1}}}
