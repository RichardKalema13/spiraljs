{
"node_modules/browser-pack/_prelude.js":{"path":"node_modules/browser-pack/_prelude.js","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}}},"branchMap":{"1":{"line":1,"type":"if","locations":[{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":0},"end":{"line":null,"column":-1}}]}},"s":{"1":81},"b":{"1":[22,15]},"f":{"1":28},"code":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","l":{"1":81}},
"src/BubbleSpiral.ts":{"path":"src/BubbleSpiral.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":9,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":9,"column":37},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":14,"column":11},"end":{"line":39,"column":5}},"7":{"start":{"line":14,"column":4},"end":{"line":39,"column":5}},"8":{"start":{"line":15,"column":8},"end":{"line":17,"column":52}},"9":{"start":{"line":19,"column":8},"end":{"line":20,"column":53}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":38}},"11":{"start":{"line":24,"column":8},"end":{"line":27,"column":37}},"12":{"start":{"line":29,"column":8},"end":{"line":36,"column":41}},"13":{"start":{"line":30,"column":31},"end":{"line":30,"column":67}},"14":{"start":{"line":31,"column":31},"end":{"line":31,"column":67}},"15":{"start":{"line":32,"column":30},"end":{"line":32,"column":48}},"16":{"start":{"line":33,"column":51},"end":{"line":33,"column":68}},"17":{"start":{"line":33,"column":77},"end":{"line":33,"column":82}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":20}},"19":{"start":{"line":41,"column":11},"end":{"line":44,"column":5}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":44}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":33}},"22":{"start":{"line":45,"column":0},"end":{"line":45,"column":1}},"23":{"start":{"line":9,"column":13},"end":{"line":45,"column":1}}},"fnMap":{"1":{"name":"(anonymous_9)","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"BubbleSpiral","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}}},"3":{"name":"(anonymous_11)","line":14,"loc":{"start":{"line":14,"column":4},"end":{"line":14,"column":27}}},"4":{"name":"(anonymous_12)","line":30,"loc":{"start":{"line":30,"column":24},"end":{"line":30,"column":26}}},"5":{"name":"(anonymous_13)","line":31,"loc":{"start":{"line":31,"column":24},"end":{"line":31,"column":26}}},"6":{"name":"(anonymous_14)","line":32,"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":25}}},"7":{"name":"(anonymous_15)","line":33,"loc":{"start":{"line":33,"column":44},"end":{"line":33,"column":46}}},"8":{"name":"(anonymous_16)","line":33,"loc":{"start":{"line":33,"column":71},"end":{"line":33,"column":76}}},"9":{"name":"(anonymous_17)","line":41,"loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":44},"end":{"line":33,"column":68}},{"start":{"line":33,"column":71},"end":{"line":33,"column":82}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":1,"23":1},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"code":"import { SpiralBase } from './SpiralBase';\nimport  * as d3 from 'd3';\n\n/**\n * Chart data using bubbles on  a spiral. Each entry in a table is visualised\n * as a bubble; size and color may be varied using the methods `radius_map`\n * and `color_map`.\n */\nexport class BubbleSpiral<T> extends SpiralBase<T> {\n    constructor (element: d3.Selection<any>) {\n        super(element);\n    }\n\n    public render(data: T[]): d3.Selection<any> {\n        const svg = this.element.append('svg')\n                    .attr('height', this.chartHeight)\n                    .attr('width', this.chartWidth);\n\n        const plot = svg.append('g')\n            .attr('transform', 'translate(400 300)');\n\n        this.render_spiral_axis(plot);\n\n        const bubble_groups = plot.append('g').selectAll('g.bubble')\n            .data(data)\n            .enter().append('g')\n            .attr('class', 'bubble');\n\n        bubble_groups.append('circle')\n            .attr('cx', (d) => this.get_polar(this.radial_map(d)).x)\n            .attr('cy', (d) => this.get_polar(this.radial_map(d)).y)\n            .attr('r', (d) => this.radius_map(d))\n            .style('fill', this.color_map ? (d) => this.color_map(d) : () => 'red')\n            .style('fill-opacity', 0.1)\n            .style('stroke', 'black')\n            .style('stroke-width', 0.05);\n\n        return plot;\n    }\n\n    public update(data: T[]): d3.Selection<any> {\n        this.element.select('svg').remove();\n        return this.render(data);\n    }\n}\n","l":{"1":1,"9":1,"10":1,"11":0,"14":1,"15":0,"19":0,"22":0,"24":0,"29":0,"30":0,"31":0,"32":0,"33":0,"38":0,"41":1,"42":0,"43":0,"45":1}},
"src/LineChart.ts":{"path":"src/LineChart.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":56,"column":1}},"4":{"start":{"line":7,"column":31},"end":{"line":7,"column":48}},"5":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":65}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":70}},"10":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":71}},"12":{"start":{"line":22,"column":11},"end":{"line":55,"column":5}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":59}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":60}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":62}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":60}},"17":{"start":{"line":27,"column":8},"end":{"line":31,"column":94}},"18":{"start":{"line":33,"column":8},"end":{"line":33,"column":44}},"19":{"start":{"line":33,"column":38},"end":{"line":33,"column":41}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":44}},"21":{"start":{"line":34,"column":38},"end":{"line":34,"column":41}},"22":{"start":{"line":36,"column":8},"end":{"line":38,"column":28}},"23":{"start":{"line":37,"column":20},"end":{"line":37,"column":26}},"24":{"start":{"line":38,"column":20},"end":{"line":38,"column":26}},"25":{"start":{"line":40,"column":8},"end":{"line":43,"column":25}},"26":{"start":{"line":45,"column":8},"end":{"line":47,"column":25}},"27":{"start":{"line":49,"column":8},"end":{"line":52,"column":29}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":19}},"29":{"start":{"line":56,"column":0},"end":{"line":56,"column":1}},"30":{"start":{"line":7,"column":13},"end":{"line":56,"column":1}}},"fnMap":{"1":{"name":"(anonymous_22)","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"LineChart","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}}},"3":{"name":"(anonymous_24)","line":15,"loc":{"start":{"line":15,"column":4},"end":{"line":null,"column":-1}}},"4":{"name":"(anonymous_25)","line":18,"loc":{"start":{"line":18,"column":4},"end":{"line":null,"column":-1}}},"5":{"name":"(anonymous_26)","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}}},"6":{"name":"(anonymous_27)","line":33,"loc":{"start":{"line":33,"column":33},"end":{"line":33,"column":34}}},"7":{"name":"(anonymous_28)","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":34}}},"8":{"name":"(anonymous_29)","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":16}}},"9":{"name":"(anonymous_30)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":16}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1},"b":{"1":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"code":"import * as d3 from 'd3';\n\nimport { Base }        from './basechart';\nimport { ICoordinate } from './basechart';\nimport { IMargin }     from './basechart';\n\nexport class LineChart extends Base<ICoordinate> {\n    public margin: IMargin;\n\n    constructor (element: d3.Selection<any>) {\n        super(element);\n        this.margin = {top: 20, right: 20, bottom: 30, left: 50};\n    }\n\n    public get width(): number {\n        return this.chartWidth - this.margin.left - this.margin.right;\n    }\n    public get height(): number {\n        return this.chartHeight - this.margin.top - this.margin.bottom;\n    }\n\n    public render(data: ICoordinate[]): d3.Selection<any> {\n        const x = d3.scale.linear().range([0, this.width]);\n        const y = d3.scale.linear().range([this.height, 0]);\n        const xAxis = d3.svg.axis().scale(x).orient('bottom');\n        const yAxis = d3.svg.axis().scale(y).orient('left');\n        const svg = this.element.append('svg')\n            .attr('width', this.chartWidth)\n            .attr('height', this.chartHeight)\n            .append('g')\n            .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n        x.domain(d3.extent(data, a => a.x));\n        y.domain(d3.extent(data, a => a.y));\n\n        const line = d3.svg.line<ICoordinate>()\n            .x(a => x(a.x))\n            .y(a => y(a.y));\n\n        svg.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + this.height + ')')\n            .call(xAxis);\n\n        svg.append('g')\n            .attr('class', 'y axis')\n            .call(yAxis);\n\n        svg.append('path')\n            .datum(data)\n            .attr('class', 'line')\n            .attr('d', line);\n\n        return svg;\n    }\n}\n","l":{"1":1,"3":1,"7":1,"10":1,"11":0,"12":0,"15":1,"16":0,"18":1,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"45":0,"49":0,"54":0,"56":1}},
"src/LineSpiral.ts":{"path":"src/LineSpiral.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"3":{"start":{"line":15,"column":0},"end":{"line":82,"column":1}},"4":{"start":{"line":15,"column":35},"end":{"line":15,"column":48}},"5":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":29}},"8":{"start":{"line":19,"column":12},"end":{"line":19,"column":53}},"9":{"start":{"line":20,"column":12},"end":{"line":20,"column":53}},"10":{"start":{"line":27,"column":4},"end":{"line":35,"column":5}},"11":{"start":{"line":28,"column":8},"end":{"line":30,"column":37}},"12":{"start":{"line":32,"column":8},"end":{"line":32,"column":44}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":64}},"14":{"start":{"line":33,"column":58},"end":{"line":33,"column":61}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":64}},"16":{"start":{"line":34,"column":58},"end":{"line":34,"column":61}},"17":{"start":{"line":37,"column":11},"end":{"line":75,"column":5}},"18":{"start":{"line":37,"column":4},"end":{"line":75,"column":5}},"19":{"start":{"line":38,"column":8},"end":{"line":40,"column":52}},"20":{"start":{"line":42,"column":8},"end":{"line":43,"column":53}},"21":{"start":{"line":47,"column":8},"end":{"line":48,"column":56}},"22":{"start":{"line":48,"column":17},"end":{"line":48,"column":54}},"23":{"start":{"line":50,"column":8},"end":{"line":52,"column":25}},"24":{"start":{"line":51,"column":20},"end":{"line":51,"column":23}},"25":{"start":{"line":52,"column":20},"end":{"line":52,"column":23}},"26":{"start":{"line":56,"column":8},"end":{"line":56,"column":47}},"27":{"start":{"line":57,"column":8},"end":{"line":72,"column":9}},"28":{"start":{"line":58,"column":12},"end":{"line":59,"column":54}},"29":{"start":{"line":60,"column":12},"end":{"line":61,"column":68}},"30":{"start":{"line":61,"column":21},"end":{"line":61,"column":66}},"31":{"start":{"line":62,"column":12},"end":{"line":64,"column":27}},"32":{"start":{"line":63,"column":21},"end":{"line":63,"column":68}},"33":{"start":{"line":66,"column":12},"end":{"line":71,"column":44}},"34":{"start":{"line":74,"column":8},"end":{"line":74,"column":20}},"35":{"start":{"line":77,"column":11},"end":{"line":81,"column":5}},"36":{"start":{"line":78,"column":8},"end":{"line":78,"column":44}},"37":{"start":{"line":79,"column":8},"end":{"line":79,"column":25}},"38":{"start":{"line":80,"column":8},"end":{"line":80,"column":29}},"39":{"start":{"line":82,"column":0},"end":{"line":82,"column":1}},"40":{"start":{"line":15,"column":13},"end":{"line":82,"column":1}}},"fnMap":{"1":{"name":"(anonymous_35)","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"LineSpiral","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}}},"3":{"name":"(anonymous_37)","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}}},"4":{"name":"(anonymous_38)","line":33,"loc":{"start":{"line":33,"column":53},"end":{"line":33,"column":54}}},"5":{"name":"(anonymous_39)","line":34,"loc":{"start":{"line":34,"column":53},"end":{"line":34,"column":54}}},"6":{"name":"(anonymous_40)","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":null,"column":-1}}},"7":{"name":"(anonymous_41)","line":48,"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":13}}},"8":{"name":"(anonymous_42)","line":51,"loc":{"start":{"line":51,"column":15},"end":{"line":51,"column":16}}},"9":{"name":"(anonymous_43)","line":52,"loc":{"start":{"line":52,"column":15},"end":{"line":52,"column":16}}},"10":{"name":"(anonymous_44)","line":61,"loc":{"start":{"line":61,"column":16},"end":{"line":61,"column":17}}},"11":{"name":"(anonymous_45)","line":63,"loc":{"start":{"line":63,"column":16},"end":{"line":63,"column":17}}},"12":{"name":"(anonymous_46)","line":77,"loc":{"start":{"line":77,"column":4},"end":{"line":77,"column":27}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":1},"b":{"1":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"code":"import * as d3 from 'd3';\n\nimport { IHistogramOutput } from './basechart';\nimport { Polar }            from './basechart';\nimport { SpiralBase }       from './SpiralBase';\n\n// (used to be in spiral.ts, module Chart)\n\n/**\n * Charts data table as a filled curve on a spiral. We first create a histogram\n * of the data items, then plot the histogram as the thickness of a line (or\n * (filled curve). The number of points in the histogram is currently set by the\n * private member `n_points`.\n */\nexport class LineSpiral<T> extends SpiralBase<T> {\n    private hist_data: IHistogramOutput[];\n    private hist_fn: d3.layout.Histogram<T>;\n    private n_points = 10000;\n    private hist_x = d3.scale.linear().range([0, 1]);\n    private hist_y = d3.scale.linear().range([0, 1]);\n\n    constructor (element: d3.Selection<any>) {\n        super(element);\n        // this.radial_map = d => 1;\n    }\n\n    public set data(data: T[]) {\n        this.hist_fn = d3.layout.histogram<T>()\n            .value(this.radial_map)\n            .bins(this.n_points + 1);\n\n        this.hist_data = this.hist_fn(data);\n        this.hist_x.domain(d3.extent(this.hist_data, a => a.x));\n        this.hist_y.domain(d3.extent(this.hist_data, a => a.y));\n    }\n\n    public render(): d3.Selection<any> {\n        const svg = this.element.append('svg')\n                    .attr('height', this.chartHeight)\n                    .attr('width', this.chartWidth);\n\n        const plot = svg.append('g')\n            .attr('transform', 'translate(400 300)');\n\n        // this.render_spiral_axis(plot);\n\n        const polar_data = this.hist_data.slice(1).map<[Polar, number]>(\n            a => [this.get_polar(a.x + a.dx / 2), a.y]);\n\n        const line = d3.svg.line<Polar>()\n            .x(a => a.x) // * this.radial_scale)\n            .y(a => a.y); // * this.radial_scale);\n\n        // console.log(polar_data);\n        // chop the graph in many pieces\n        const piece_size = this.n_points / 256;\n        for (let i = 0; i < 256; i += 1) {\n            const piece = polar_data.slice(\n                piece_size * i, piece_size * (i + 1));\n            const top_part = piece.map(\n                a => a[0].inc_r(a[1] * (this.period_fraction * 3)));\n            const bottom_part = piece.map(\n                a => a[0].inc_r(- a[1] * (this.period_fraction * 3)))\n                .reverse();\n\n            plot.append('path')\n                .datum(top_part.concat(bottom_part))\n                .attr('class', 'blob')\n                .attr('d', line)\n                .style('fill', 'blue')\n                .style('fill-opacity', 0.7);\n        }\n\n        return plot;\n    }\n\n    public update(data: T[]): d3.Selection<any> {\n        this.element.select('svg').remove();\n        this.data = data;\n        return this.render();\n    }\n}\n","l":{"1":1,"5":1,"15":1,"18":0,"19":0,"20":0,"22":1,"23":0,"27":1,"28":0,"32":0,"33":0,"34":0,"37":1,"38":0,"42":0,"47":0,"48":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"66":0,"74":0,"77":1,"78":0,"79":0,"80":0,"82":1}},
"src/SpiralBase.ts":{"path":"src/SpiralBase.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"4":{"start":{"line":22,"column":0},"end":{"line":118,"column":1}},"5":{"start":{"line":22,"column":35},"end":{"line":22,"column":42}},"6":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"7":{"start":{"line":51,"column":8},"end":{"line":51,"column":23}},"8":{"start":{"line":33,"column":11},"end":{"line":33,"column":46}},"9":{"start":{"line":52,"column":8},"end":{"line":52,"column":52}},"10":{"start":{"line":35,"column":12},"end":{"line":38,"column":5}},"11":{"start":{"line":36,"column":8},"end":{"line":37,"column":61}},"12":{"start":{"line":42,"column":11},"end":{"line":48,"column":5}},"13":{"start":{"line":43,"column":8},"end":{"line":47,"column":9}},"14":{"start":{"line":44,"column":12},"end":{"line":44,"column":25}},"15":{"start":{"line":46,"column":12},"end":{"line":46,"column":31}},"16":{"start":{"line":55,"column":11},"end":{"line":57,"column":5}},"17":{"start":{"line":56,"column":8},"end":{"line":56,"column":18}},"18":{"start":{"line":59,"column":11},"end":{"line":62,"column":5}},"19":{"start":{"line":60,"column":8},"end":{"line":61,"column":46}},"20":{"start":{"line":64,"column":11},"end":{"line":90,"column":5}},"21":{"start":{"line":64,"column":4},"end":{"line":90,"column":5}},"22":{"start":{"line":66,"column":8},"end":{"line":71,"column":10}},"23":{"start":{"line":67,"column":19},"end":{"line":70,"column":55}},"24":{"start":{"line":73,"column":8},"end":{"line":74,"column":35}},"25":{"start":{"line":76,"column":8},"end":{"line":79,"column":34}},"26":{"start":{"line":77,"column":22},"end":{"line":77,"column":25}},"27":{"start":{"line":78,"column":22},"end":{"line":78,"column":25}},"28":{"start":{"line":81,"column":8},"end":{"line":87,"column":40}},"29":{"start":{"line":89,"column":8},"end":{"line":89,"column":21}},"30":{"start":{"line":92,"column":11},"end":{"line":117,"column":5}},"31":{"start":{"line":92,"column":4},"end":{"line":117,"column":5}},"32":{"start":{"line":95,"column":8},"end":{"line":95,"column":72}},"33":{"start":{"line":95,"column":34},"end":{"line":95,"column":71}},"34":{"start":{"line":96,"column":8},"end":{"line":96,"column":70}},"35":{"start":{"line":96,"column":32},"end":{"line":96,"column":69}},"36":{"start":{"line":98,"column":8},"end":{"line":98,"column":66}},"37":{"start":{"line":100,"column":8},"end":{"line":101,"column":67}},"38":{"start":{"line":103,"column":8},"end":{"line":107,"column":40}},"39":{"start":{"line":104,"column":31},"end":{"line":104,"column":41}},"40":{"start":{"line":104,"column":61},"end":{"line":104,"column":71}},"41":{"start":{"line":105,"column":31},"end":{"line":105,"column":39}},"42":{"start":{"line":105,"column":59},"end":{"line":105,"column":67}},"43":{"start":{"line":109,"column":8},"end":{"line":114,"column":36}},"44":{"start":{"line":110,"column":30},"end":{"line":110,"column":48}},"45":{"start":{"line":111,"column":30},"end":{"line":111,"column":48}},"46":{"start":{"line":113,"column":28},"end":{"line":113,"column":36}},"47":{"start":{"line":116,"column":8},"end":{"line":116,"column":21}},"48":{"start":{"line":118,"column":0},"end":{"line":118,"column":1}},"49":{"start":{"line":22,"column":13},"end":{"line":118,"column":1}}},"fnMap":{"1":{"name":"(anonymous_51)","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"SpiralBase","line":50,"loc":{"start":{"line":50,"column":4},"end":{"line":50,"column":43}}},"3":{"name":"(anonymous_53)","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":33}}},"4":{"name":"(anonymous_54)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":38}}},"5":{"name":"(anonymous_55)","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":55,"column":27}}},"6":{"name":"(anonymous_56)","line":59,"loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":30}}},"7":{"name":"(anonymous_57)","line":64,"loc":{"start":{"line":64,"column":4},"end":{"line":65,"column":35}}},"8":{"name":"(anonymous_58)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":14}}},"9":{"name":"(anonymous_59)","line":77,"loc":{"start":{"line":77,"column":15},"end":{"line":77,"column":17}}},"10":{"name":"(anonymous_60)","line":78,"loc":{"start":{"line":78,"column":15},"end":{"line":78,"column":17}}},"11":{"name":"(anonymous_61)","line":92,"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":44}}},"12":{"name":"(anonymous_62)","line":95,"loc":{"start":{"line":95,"column":22},"end":{"line":95,"column":29}}},"13":{"name":"(anonymous_63)","line":96,"loc":{"start":{"line":96,"column":20},"end":{"line":96,"column":27}}},"14":{"name":"(anonymous_64)","line":104,"loc":{"start":{"line":104,"column":24},"end":{"line":104,"column":26}}},"15":{"name":"(anonymous_65)","line":104,"loc":{"start":{"line":104,"column":54},"end":{"line":104,"column":56}}},"16":{"name":"(anonymous_66)","line":105,"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":26}}},"17":{"name":"(anonymous_67)","line":105,"loc":{"start":{"line":105,"column":52},"end":{"line":105,"column":54}}},"18":{"name":"(anonymous_68)","line":110,"loc":{"start":{"line":110,"column":23},"end":{"line":110,"column":25}}},"19":{"name":"(anonymous_69)","line":111,"loc":{"start":{"line":111,"column":23},"end":{"line":111,"column":25}}},"20":{"name":"(anonymous_70)","line":113,"loc":{"start":{"line":113,"column":18},"end":{"line":113,"column":23}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":7}},{"start":{"line":43,"column":8},"end":{"line":43,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1},"b":{"1":[1,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"code":"import * as d3 from 'd3';\n\nimport { Base }        from './basechart';\nimport { Polar }       from './basechart';\nimport { ICoordinate } from './basechart';\n\n// (used to be in spiral.ts, module Chart)\n\n/**\n * This is the base class to other charts on a spiral.\n *\n * @member radial_map A function mapping a record of type T to a number,\n *     indicating time. A candidate for this function is\n *     `d3.time.Scale<number,number>`.\n * @member radial_scale An extra scaling factor to the output of `radial_map`.\n * @member period_fraction One over the number of windings on the spiral.\n * @member radius_map A function giving the radius of a bubble or weight of a\n *     data point.\n * @member color_map Returns a color-string given a record.\n * @member angular_map Maps a number (as output by radial_scale) to an angle.\n */\nexport class SpiralBase<T> extends Base<T> {\n\n    public radial_map: (x: T) => number;\n\n    public radial_scale: number;\n\n    // the fraction of one turn against the entire range\n    public period_fraction: number;\n\n    public radius_map: (x: T) => number;\n\n    public color_map: (x: T) => string = null;\n\n    private angular_map(x: number) {\n        return SpiralBase.MODULO(x, this.period_fraction) /\n            this.period_fraction * 2 * Math.PI - Math.PI / 2;\n    }\n\n    public line_tics: any;\n\n    static MODULO(x: number, y: number): number {\n        if (x >= 0) {\n            return x % y;\n        } else {\n            return y - (x % y);\n        }\n    }\n\n    constructor (element: d3.Selection<any>) {\n        super(element);\n        this.radial_scale = this.chartHeight * 0.45;\n    }\n\n    public get_label(_: any): string {\n        return '';\n    }\n\n    public get_polar(d: number): Polar {\n        return new Polar((d * 0.8 + 0.15) * this.radial_scale,\n                         this.angular_map(d));\n    }\n\n    public render_spiral_axis(\n            plot: d3.Selection<any>) {\n        const pts: ICoordinate[] = d3.range(1000).map(\n            (i) => new Polar(\n                ((i / 1000) * 0.8 + 0.15) * this.radial_scale,\n                SpiralBase.MODULO(i / 1000, this.period_fraction) /\n                    this.period_fraction * 2 * Math.PI)\n        );\n\n        const group = plot.append('g')\n            .attr('class', 'axis');\n\n        const line = d3.svg.line<ICoordinate>()\n            .x((d) => d.x)\n            .y((d) => d.y)\n            .interpolate('basis');\n\n        group.append('path')\n            .datum(pts)\n            .attr('class', 'line')\n            .attr('d', line)\n            .style('fill', 'none')\n            .style('stroke', '#000')\n            .style('stroke-width', 0.5);\n\n        return group;\n    }\n\n    public add_axis(\n            selection: d3.Selection<any>,\n            angle: number[], label: string[]) {\n        const start = (a: any) => new Polar(0.2 * this.radial_scale, a);\n        const end = (a: any) => new Polar(1.0 * this.radial_scale, a);\n\n        const group = selection.append('g').attr('class', 'axes');\n\n        const axes = group.selectAll('g.axis')\n            .data(angle).enter().append('g').attr('class', 'axis');\n\n        axes.append('line')\n            .attr('x1', (d) => start(d).x).attr('y1', (d) => start(d).y)\n            .attr('x2', (d) => end(d).x).attr('y2', (d) => end(d).y)\n            .style('stroke', 'black')\n            .style('stroke-width', 0.5);\n\n        axes.append('text')\n            .attr('x', (d) => end(d).inc_r(15).x)\n            .attr('y', (d) => end(d).inc_r(15).y)\n            .attr('text-anchor', 'middle').attr('dy', 5)\n            .text((_, i) => label[i])\n            .style('font-size', 16);\n\n        return group;\n    }\n}\n","l":{"1":1,"3":1,"4":1,"22":1,"33":0,"35":1,"36":0,"42":1,"43":0,"44":0,"46":0,"50":1,"51":0,"52":0,"55":1,"56":0,"59":1,"60":0,"64":1,"66":0,"67":0,"73":0,"76":0,"77":0,"78":0,"81":0,"89":0,"92":1,"95":0,"96":0,"98":0,"100":0,"103":0,"104":0,"105":0,"109":0,"110":0,"111":0,"113":0,"116":0,"118":1}},
"src/TimedBubbleSpiral.ts":{"path":"src/TimedBubbleSpiral.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":54,"column":1}},"4":{"start":{"line":6,"column":42},"end":{"line":6,"column":69}},"5":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"6":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"7":{"start":{"line":9,"column":11},"end":{"line":15,"column":6}},"8":{"start":{"line":10,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":27}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}},"11":{"start":{"line":21,"column":11},"end":{"line":23,"column":6}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":39}},"13":{"start":{"line":25,"column":4},"end":{"line":30,"column":5}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":47}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":66}},"18":{"start":{"line":36,"column":4},"end":{"line":40,"column":5}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":47}},"20":{"start":{"line":38,"column":8},"end":{"line":38,"column":50}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":51}},"22":{"start":{"line":42,"column":11},"end":{"line":44,"column":5}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":37}},"24":{"start":{"line":46,"column":11},"end":{"line":53,"column":5}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":36}},"26":{"start":{"line":48,"column":8},"end":{"line":51,"column":63}},"27":{"start":{"line":50,"column":36},"end":{"line":50,"column":65}},"28":{"start":{"line":51,"column":36},"end":{"line":51,"column":60}},"29":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":1}},"31":{"start":{"line":6,"column":13},"end":{"line":54,"column":1}}},"fnMap":{"1":{"name":"(anonymous_75)","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"TimedBubbleSpiral","line":17,"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":43}}},"3":{"name":"(anonymous_77)","line":9,"loc":{"start":{"line":9,"column":23},"end":{"line":9,"column":42}}},"4":{"name":"(anonymous_78)","line":21,"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":43}}},"5":{"name":"(anonymous_79)","line":32,"loc":{"start":{"line":32,"column":4},"end":{"line":null,"column":-1}}},"6":{"name":"(anonymous_80)","line":25,"loc":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}}},"7":{"name":"(anonymous_81)","line":36,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}}},"8":{"name":"(anonymous_82)","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":39}}},"9":{"name":"(anonymous_83)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":null,"column":-1}}},"10":{"name":"(anonymous_84)","line":50,"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":31}}},"11":{"name":"(anonymous_85)","line":51,"loc":{"start":{"line":51,"column":29},"end":{"line":51,"column":31}}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}},{"start":{"line":1,"column":25},"end":{"line":null,"column":-1}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":7}},{"start":{"line":10,"column":8},"end":{"line":10,"column":7}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1},"b":{"1":[1,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"code":"import * as d3 from 'd3';\n\nimport { ITimedRecord } from './ITimedRecord';\nimport { LineSpiral } from './LineSpiral';\n\nexport class TimedBubbleSpiral<T> extends LineSpiral<ITimedRecord<T>> {\n    private _period: d3.time.Interval;\n    public time_scale: d3.time.Scale<number, number>;\n    public color_map = (d: ITimedRecord<T>) => {\n        if (d.color) {\n            return d.color;\n        } else {\n            return 'red';\n        }\n    };\n\n    constructor (element: d3.Selection<any>) {\n        super(element);\n    }\n\n    public radial_map = (x: ITimedRecord<T>) => {\n        return this.time_scale(x.date);\n    };\n\n    set period(p: d3.time.Interval) {\n        this._period = p;\n\n        const zero = this.time_scale.invert(0);\n        this.period_fraction = this.time_scale(p.offset(zero, 1));\n    }\n\n    get period(): d3.time.Interval {\n        return this._period;\n    }\n\n    set period_seconds(p: number) {\n        const zero = this.time_scale.invert(0);\n        const iv = d3.time.second.offset(zero, p);\n        this.period_fraction = this.time_scale(iv);\n    }\n\n    public get_label(d: ITimedRecord<T>): string {\n        return d.date.toDateString();\n    }\n\n    public render(): d3.Selection<any> {\n        const plot = super.render();\n        this.add_axis(\n            plot,\n            d3.range(16).map((i) => i / 8 * Math.PI - Math.PI / 2),\n            d3.range(16).map((i) => (i / 8).toString() + 'π'));\n        return plot;\n    }\n}\n","l":{"1":1,"4":1,"6":1,"9":0,"10":0,"11":0,"13":0,"17":1,"18":0,"21":0,"22":0,"25":1,"26":0,"28":0,"29":0,"33":0,"36":1,"37":0,"38":0,"39":0,"42":1,"43":0,"46":1,"47":0,"48":0,"50":0,"51":0,"52":0,"54":1}},
"src/basechart.ts":{"path":"src/basechart.ts","statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":19}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":1}},"6":{"start":{"line":8,"column":13},"end":{"line":16,"column":1}},"7":{"start":{"line":18,"column":0},"end":{"line":33,"column":1}},"8":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":19}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":23}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":51}},"12":{"start":{"line":27,"column":14},"end":{"line":27,"column":49}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}},"14":{"start":{"line":28,"column":14},"end":{"line":28,"column":49}},"15":{"start":{"line":30,"column":11},"end":{"line":32,"column":5}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":48}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":1}},"18":{"start":{"line":18,"column":13},"end":{"line":33,"column":1}},"19":{"start":{"line":48,"column":0},"end":{"line":60,"column":1}},"20":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"21":{"start":{"line":49,"column":11},"end":{"line":49,"column":28}},"22":{"start":{"line":50,"column":11},"end":{"line":50,"column":29}},"23":{"start":{"line":54,"column":8},"end":{"line":54,"column":31}},"24":{"start":{"line":57,"column":11},"end":{"line":59,"column":5}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":20}},"26":{"start":{"line":60,"column":0},"end":{"line":60,"column":1}},"27":{"start":{"line":48,"column":22},"end":{"line":60,"column":1}}},"fnMap":{"1":{"name":"(anonymous_87)","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":null,"column":-1}}},"2":{"name":"Cartesian","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":36}}},"3":{"name":"(anonymous_89)","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":null,"column":-1}}},"4":{"name":"Polar","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}}},"5":{"name":"(anonymous_91)","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":27,"column":13}}},"6":{"name":"(anonymous_92)","line":28,"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}}},"7":{"name":"(anonymous_93)","line":30,"loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}}},"8":{"name":"(anonymous_94)","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":null,"column":-1}}},"9":{"name":"Base","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":43}}},"10":{"name":"(anonymous_96)","line":57,"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":24}}}},"branchMap":{},"s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":1},"b":{},"f":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0},"code":"import * as d3 from 'd3';\n\nexport interface ICoordinate {\n    x: number;\n    y: number;\n}\n\nexport class Cartesian implements ICoordinate {\n    public x: number;\n    public y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Polar implements ICoordinate {\n    public r: number;\n    public phi: number;\n\n    constructor (r: number, phi: number) {\n        this.r = r;\n        this.phi = phi;\n    }\n\n    get x() { return this.r * Math.cos(this.phi); }\n    get y() { return this.r * Math.sin(this.phi); }\n\n    public inc_r(dr: number): Polar {\n        return new Polar(this.r + dr, this.phi);\n    }\n}\n\nexport interface IMargin {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n}\n\nexport interface IHistogramOutput {\n    x: number;\n    dx: number;\n    y: number;\n}\n\nexport abstract class Base<T> {\n    public chartWidth = 800;\n    public chartHeight = 600;\n    public element: d3.Selection<any>;\n\n    constructor (element: d3.Selection<any>) {\n        this.element = element;\n    }\n\n    public render(_: T[]): d3.Selection<any> {\n        return null;\n    }\n}\n","l":{"8":1,"12":1,"13":0,"14":0,"16":1,"18":1,"22":1,"23":0,"24":0,"27":1,"28":1,"30":1,"31":0,"33":1,"48":1,"49":0,"50":0,"53":1,"54":0,"57":1,"58":0,"60":1}},
"src/index.ts":{"path":"src/index.ts","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"2":{"start":{"line":1,"column":9},"end":{"line":1,"column":46}},"3":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"4":{"start":{"line":2,"column":9},"end":{"line":2,"column":43}},"5":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"6":{"start":{"line":3,"column":9},"end":{"line":3,"column":44}},"7":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"8":{"start":{"line":4,"column":9},"end":{"line":4,"column":44}},"9":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"10":{"start":{"line":5,"column":9},"end":{"line":5,"column":56}}},"fnMap":{},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{},"f":{},"code":"export { BubbleSpiral } from './BubbleSpiral';\nexport { LineChart }    from './LineChart';\nexport { LineSpiral }   from './LineSpiral';\nexport { SpiralBase }   from './SpiralBase';\nexport { TimedBubbleSpiral } from './TimedBubbleSpiral';\n","l":{"1":1,"2":1,"3":1,"4":1,"5":1}}}
